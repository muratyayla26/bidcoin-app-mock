{"ast":null,"code":"\"use strict\";\n\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox/value\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Hash = exports.ByteMarker = exports.ValueHashError = void 0;\nconst guard_1 = require(\"./guard\");\n// --------------------------------------------------------------------------\n// Errors\n// --------------------------------------------------------------------------\nclass ValueHashError extends Error {\n  constructor(value) {\n    super(`Unable to hash value`);\n    this.value = value;\n  }\n}\nexports.ValueHashError = ValueHashError;\n// --------------------------------------------------------------------------\n// ByteMarker\n// --------------------------------------------------------------------------\nvar ByteMarker;\n(function (ByteMarker) {\n  ByteMarker[ByteMarker[\"Undefined\"] = 0] = \"Undefined\";\n  ByteMarker[ByteMarker[\"Null\"] = 1] = \"Null\";\n  ByteMarker[ByteMarker[\"Boolean\"] = 2] = \"Boolean\";\n  ByteMarker[ByteMarker[\"Number\"] = 3] = \"Number\";\n  ByteMarker[ByteMarker[\"String\"] = 4] = \"String\";\n  ByteMarker[ByteMarker[\"Object\"] = 5] = \"Object\";\n  ByteMarker[ByteMarker[\"Array\"] = 6] = \"Array\";\n  ByteMarker[ByteMarker[\"Date\"] = 7] = \"Date\";\n  ByteMarker[ByteMarker[\"Uint8Array\"] = 8] = \"Uint8Array\";\n  ByteMarker[ByteMarker[\"Symbol\"] = 9] = \"Symbol\";\n  ByteMarker[ByteMarker[\"BigInt\"] = 10] = \"BigInt\";\n})(ByteMarker || (exports.ByteMarker = ByteMarker = {}));\n// --------------------------------------------------------------------------\n// State\n// --------------------------------------------------------------------------\nlet Accumulator = BigInt('14695981039346656037');\nconst [Prime, Size] = [BigInt('1099511628211'), BigInt('2') ** BigInt('64')];\nconst Bytes = Array.from({\n  length: 256\n}).map((_, i) => BigInt(i));\nconst F64 = new Float64Array(1);\nconst F64In = new DataView(F64.buffer);\nconst F64Out = new Uint8Array(F64.buffer);\n// --------------------------------------------------------------------------\n// NumberToBytes\n// --------------------------------------------------------------------------\nfunction* NumberToBytes(value) {\n  const byteCount = value === 0 ? 1 : Math.ceil(Math.floor(Math.log2(value) + 1) / 8);\n  for (let i = 0; i < byteCount; i++) {\n    yield value >> 8 * (byteCount - 1 - i) & 0xff;\n  }\n}\n// --------------------------------------------------------------------------\n// Hashing Functions\n// --------------------------------------------------------------------------\nfunction ArrayType(value) {\n  FNV1A64(ByteMarker.Array);\n  for (const item of value) {\n    Visit(item);\n  }\n}\nfunction BooleanType(value) {\n  FNV1A64(ByteMarker.Boolean);\n  FNV1A64(value ? 1 : 0);\n}\nfunction BigIntType(value) {\n  FNV1A64(ByteMarker.BigInt);\n  F64In.setBigInt64(0, value);\n  for (const byte of F64Out) {\n    FNV1A64(byte);\n  }\n}\nfunction DateType(value) {\n  FNV1A64(ByteMarker.Date);\n  Visit(value.getTime());\n}\nfunction NullType(value) {\n  FNV1A64(ByteMarker.Null);\n}\nfunction NumberType(value) {\n  FNV1A64(ByteMarker.Number);\n  F64In.setFloat64(0, value);\n  for (const byte of F64Out) {\n    FNV1A64(byte);\n  }\n}\nfunction ObjectType(value) {\n  FNV1A64(ByteMarker.Object);\n  for (const key of globalThis.Object.keys(value).sort()) {\n    Visit(key);\n    Visit(value[key]);\n  }\n}\nfunction StringType(value) {\n  FNV1A64(ByteMarker.String);\n  for (let i = 0; i < value.length; i++) {\n    for (const byte of NumberToBytes(value.charCodeAt(i))) {\n      FNV1A64(byte);\n    }\n  }\n}\nfunction SymbolType(value) {\n  FNV1A64(ByteMarker.Symbol);\n  Visit(value.description);\n}\nfunction Uint8ArrayType(value) {\n  FNV1A64(ByteMarker.Uint8Array);\n  for (let i = 0; i < value.length; i++) {\n    FNV1A64(value[i]);\n  }\n}\nfunction UndefinedType(value) {\n  return FNV1A64(ByteMarker.Undefined);\n}\nfunction Visit(value) {\n  if ((0, guard_1.IsArray)(value)) return ArrayType(value);\n  if ((0, guard_1.IsBoolean)(value)) return BooleanType(value);\n  if ((0, guard_1.IsBigInt)(value)) return BigIntType(value);\n  if ((0, guard_1.IsDate)(value)) return DateType(value);\n  if ((0, guard_1.IsNull)(value)) return NullType(value);\n  if ((0, guard_1.IsNumber)(value)) return NumberType(value);\n  if ((0, guard_1.IsPlainObject)(value)) return ObjectType(value);\n  if ((0, guard_1.IsString)(value)) return StringType(value);\n  if ((0, guard_1.IsSymbol)(value)) return SymbolType(value);\n  if ((0, guard_1.IsUint8Array)(value)) return Uint8ArrayType(value);\n  if ((0, guard_1.IsUndefined)(value)) return UndefinedType(value);\n  throw new ValueHashError(value);\n}\nfunction FNV1A64(byte) {\n  Accumulator = Accumulator ^ Bytes[byte];\n  Accumulator = Accumulator * Prime % Size;\n}\n// --------------------------------------------------------------------------\n// Hash\n// --------------------------------------------------------------------------\n/** Creates a FNV1A-64 non cryptographic hash of the given value */\nfunction Hash(value) {\n  Accumulator = BigInt('14695981039346656037');\n  Visit(value);\n  return Accumulator;\n}\nexports.Hash = Hash;","map":{"version":3,"names":["Object","defineProperty","exports","value","Hash","ByteMarker","ValueHashError","guard_1","require","Error","constructor","Accumulator","BigInt","Prime","Size","Bytes","Array","from","length","map","_","i","F64","Float64Array","F64In","DataView","buffer","F64Out","Uint8Array","NumberToBytes","byteCount","Math","ceil","floor","log2","ArrayType","FNV1A64","item","Visit","BooleanType","Boolean","BigIntType","setBigInt64","byte","DateType","Date","getTime","NullType","Null","NumberType","Number","setFloat64","ObjectType","key","globalThis","keys","sort","StringType","String","charCodeAt","SymbolType","Symbol","description","Uint8ArrayType","UndefinedType","Undefined","IsArray","IsBoolean","IsBigInt","IsDate","IsNull","IsNumber","IsPlainObject","IsString","IsSymbol","IsUint8Array","IsUndefined"],"sources":["C:/Users/Administrator/solana-wallet-app/node_modules/@trezor/schema-utils/node_modules/@sinclair/typebox/value/hash.js"],"sourcesContent":["\"use strict\";\n/*--------------------------------------------------------------------------\n\n@sinclair/typebox/value\n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2023 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Hash = exports.ByteMarker = exports.ValueHashError = void 0;\nconst guard_1 = require(\"./guard\");\n// --------------------------------------------------------------------------\n// Errors\n// --------------------------------------------------------------------------\nclass ValueHashError extends Error {\n    constructor(value) {\n        super(`Unable to hash value`);\n        this.value = value;\n    }\n}\nexports.ValueHashError = ValueHashError;\n// --------------------------------------------------------------------------\n// ByteMarker\n// --------------------------------------------------------------------------\nvar ByteMarker;\n(function (ByteMarker) {\n    ByteMarker[ByteMarker[\"Undefined\"] = 0] = \"Undefined\";\n    ByteMarker[ByteMarker[\"Null\"] = 1] = \"Null\";\n    ByteMarker[ByteMarker[\"Boolean\"] = 2] = \"Boolean\";\n    ByteMarker[ByteMarker[\"Number\"] = 3] = \"Number\";\n    ByteMarker[ByteMarker[\"String\"] = 4] = \"String\";\n    ByteMarker[ByteMarker[\"Object\"] = 5] = \"Object\";\n    ByteMarker[ByteMarker[\"Array\"] = 6] = \"Array\";\n    ByteMarker[ByteMarker[\"Date\"] = 7] = \"Date\";\n    ByteMarker[ByteMarker[\"Uint8Array\"] = 8] = \"Uint8Array\";\n    ByteMarker[ByteMarker[\"Symbol\"] = 9] = \"Symbol\";\n    ByteMarker[ByteMarker[\"BigInt\"] = 10] = \"BigInt\";\n})(ByteMarker || (exports.ByteMarker = ByteMarker = {}));\n// --------------------------------------------------------------------------\n// State\n// --------------------------------------------------------------------------\nlet Accumulator = BigInt('14695981039346656037');\nconst [Prime, Size] = [BigInt('1099511628211'), BigInt('2') ** BigInt('64')];\nconst Bytes = Array.from({ length: 256 }).map((_, i) => BigInt(i));\nconst F64 = new Float64Array(1);\nconst F64In = new DataView(F64.buffer);\nconst F64Out = new Uint8Array(F64.buffer);\n// --------------------------------------------------------------------------\n// NumberToBytes\n// --------------------------------------------------------------------------\nfunction* NumberToBytes(value) {\n    const byteCount = value === 0 ? 1 : Math.ceil(Math.floor(Math.log2(value) + 1) / 8);\n    for (let i = 0; i < byteCount; i++) {\n        yield (value >> (8 * (byteCount - 1 - i))) & 0xff;\n    }\n}\n// --------------------------------------------------------------------------\n// Hashing Functions\n// --------------------------------------------------------------------------\nfunction ArrayType(value) {\n    FNV1A64(ByteMarker.Array);\n    for (const item of value) {\n        Visit(item);\n    }\n}\nfunction BooleanType(value) {\n    FNV1A64(ByteMarker.Boolean);\n    FNV1A64(value ? 1 : 0);\n}\nfunction BigIntType(value) {\n    FNV1A64(ByteMarker.BigInt);\n    F64In.setBigInt64(0, value);\n    for (const byte of F64Out) {\n        FNV1A64(byte);\n    }\n}\nfunction DateType(value) {\n    FNV1A64(ByteMarker.Date);\n    Visit(value.getTime());\n}\nfunction NullType(value) {\n    FNV1A64(ByteMarker.Null);\n}\nfunction NumberType(value) {\n    FNV1A64(ByteMarker.Number);\n    F64In.setFloat64(0, value);\n    for (const byte of F64Out) {\n        FNV1A64(byte);\n    }\n}\nfunction ObjectType(value) {\n    FNV1A64(ByteMarker.Object);\n    for (const key of globalThis.Object.keys(value).sort()) {\n        Visit(key);\n        Visit(value[key]);\n    }\n}\nfunction StringType(value) {\n    FNV1A64(ByteMarker.String);\n    for (let i = 0; i < value.length; i++) {\n        for (const byte of NumberToBytes(value.charCodeAt(i))) {\n            FNV1A64(byte);\n        }\n    }\n}\nfunction SymbolType(value) {\n    FNV1A64(ByteMarker.Symbol);\n    Visit(value.description);\n}\nfunction Uint8ArrayType(value) {\n    FNV1A64(ByteMarker.Uint8Array);\n    for (let i = 0; i < value.length; i++) {\n        FNV1A64(value[i]);\n    }\n}\nfunction UndefinedType(value) {\n    return FNV1A64(ByteMarker.Undefined);\n}\nfunction Visit(value) {\n    if ((0, guard_1.IsArray)(value))\n        return ArrayType(value);\n    if ((0, guard_1.IsBoolean)(value))\n        return BooleanType(value);\n    if ((0, guard_1.IsBigInt)(value))\n        return BigIntType(value);\n    if ((0, guard_1.IsDate)(value))\n        return DateType(value);\n    if ((0, guard_1.IsNull)(value))\n        return NullType(value);\n    if ((0, guard_1.IsNumber)(value))\n        return NumberType(value);\n    if ((0, guard_1.IsPlainObject)(value))\n        return ObjectType(value);\n    if ((0, guard_1.IsString)(value))\n        return StringType(value);\n    if ((0, guard_1.IsSymbol)(value))\n        return SymbolType(value);\n    if ((0, guard_1.IsUint8Array)(value))\n        return Uint8ArrayType(value);\n    if ((0, guard_1.IsUndefined)(value))\n        return UndefinedType(value);\n    throw new ValueHashError(value);\n}\nfunction FNV1A64(byte) {\n    Accumulator = Accumulator ^ Bytes[byte];\n    Accumulator = (Accumulator * Prime) % Size;\n}\n// --------------------------------------------------------------------------\n// Hash\n// --------------------------------------------------------------------------\n/** Creates a FNV1A-64 non cryptographic hash of the given value */\nfunction Hash(value) {\n    Accumulator = BigInt('14695981039346656037');\n    Visit(value);\n    return Accumulator;\n}\nexports.Hash = Hash;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
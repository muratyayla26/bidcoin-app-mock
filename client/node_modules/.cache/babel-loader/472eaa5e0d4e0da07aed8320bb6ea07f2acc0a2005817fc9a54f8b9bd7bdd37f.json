{"ast":null,"code":"import { isWalletAdapterCompatibleWallet, StandardWalletAdapter } from '@solana/wallet-standard-wallet-adapter-base';\nimport { DEPRECATED_getWallets } from '@wallet-standard/app';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nexport function useStandardWalletAdapters(adapters) {\n  const warnings = useConstant(() => new Set());\n  const {\n    get,\n    on\n  } = useConstant(() => DEPRECATED_getWallets());\n  const [standardAdapters, setStandardAdapters] = useState(() => wrapWalletsWithAdapters(get()));\n  useEffect(() => {\n    const listeners = [on('register', function () {\n      for (var _len = arguments.length, wallets = new Array(_len), _key = 0; _key < _len; _key++) {\n        wallets[_key] = arguments[_key];\n      }\n      return setStandardAdapters(standardAdapters => [...standardAdapters, ...wrapWalletsWithAdapters(wallets)]);\n    }), on('unregister', function () {\n      for (var _len2 = arguments.length, wallets = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        wallets[_key2] = arguments[_key2];\n      }\n      return setStandardAdapters(standardAdapters => standardAdapters.filter(standardAdapter => wallets.some(wallet => wallet === standardAdapter.wallet)));\n    })];\n    return () => listeners.forEach(off => off());\n  }, [on]);\n  const prevStandardAdapters = usePrevious(standardAdapters);\n  useEffect(() => {\n    if (!prevStandardAdapters) return;\n    const currentAdapters = new Set(standardAdapters);\n    const removedAdapters = new Set(prevStandardAdapters.filter(previousAdapter => !currentAdapters.has(previousAdapter)));\n    removedAdapters.forEach(adapter => adapter.destroy());\n  }, [prevStandardAdapters, standardAdapters]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => () => standardAdapters.forEach(adapter => adapter.destroy()), []);\n  return useMemo(() => [...standardAdapters, ...adapters.filter(_ref => {\n    let {\n      name\n    } = _ref;\n    if (standardAdapters.some(standardAdapter => standardAdapter.name === name)) {\n      if (!warnings.has(name)) {\n        warnings.add(name);\n        console.warn(`${name} was registered as a Standard Wallet. The Wallet Adapter for ${name} can be removed from your app.`);\n      }\n      return false;\n    }\n    return true;\n  })], [standardAdapters, adapters, warnings]);\n}\nfunction useConstant(fn) {\n  const ref = useRef();\n  if (!ref.current) {\n    ref.current = {\n      value: fn()\n    };\n  }\n  return ref.current.value;\n}\nfunction usePrevious(state) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = state;\n  });\n  return ref.current;\n}\nfunction wrapWalletsWithAdapters(wallets) {\n  return wallets.filter(isWalletAdapterCompatibleWallet).map(wallet => new StandardWalletAdapter({\n    wallet\n  }));\n}","map":{"version":3,"names":["isWalletAdapterCompatibleWallet","StandardWalletAdapter","DEPRECATED_getWallets","useEffect","useMemo","useRef","useState","useStandardWalletAdapters","adapters","warnings","useConstant","Set","get","on","standardAdapters","setStandardAdapters","wrapWalletsWithAdapters","listeners","_len","arguments","length","wallets","Array","_key","_len2","_key2","filter","standardAdapter","some","wallet","forEach","off","prevStandardAdapters","usePrevious","currentAdapters","removedAdapters","previousAdapter","has","adapter","destroy","_ref","name","add","console","warn","fn","ref","current","value","state","map"],"sources":["C:\\Users\\Administrator\\solana-wallet-app\\client\\node_modules\\@solana\\wallet-standard-wallet-adapter-react\\src\\useStandardWalletAdapters.ts"],"sourcesContent":["import type { Adapter, WalletName } from '@solana/wallet-adapter-base';\nimport { isWalletAdapterCompatibleWallet, StandardWalletAdapter } from '@solana/wallet-standard-wallet-adapter-base';\nimport { DEPRECATED_getWallets } from '@wallet-standard/app';\nimport type { Wallet } from '@wallet-standard/base';\nimport { useEffect, useMemo, useRef, useState } from 'react';\n\nexport function useStandardWalletAdapters(adapters: Adapter[]): Adapter[] {\n    const warnings = useConstant(() => new Set<WalletName>());\n    const { get, on } = useConstant(() => DEPRECATED_getWallets());\n    const [standardAdapters, setStandardAdapters] = useState(() => wrapWalletsWithAdapters(get()));\n\n    useEffect(() => {\n        const listeners = [\n            on('register', (...wallets) =>\n                setStandardAdapters((standardAdapters) => [...standardAdapters, ...wrapWalletsWithAdapters(wallets)])\n            ),\n            on('unregister', (...wallets) =>\n                setStandardAdapters((standardAdapters) =>\n                    standardAdapters.filter((standardAdapter) =>\n                        wallets.some((wallet) => wallet === standardAdapter.wallet)\n                    )\n                )\n            ),\n        ];\n        return () => listeners.forEach((off) => off());\n    }, [on]);\n\n    const prevStandardAdapters = usePrevious(standardAdapters);\n    useEffect(() => {\n        if (!prevStandardAdapters) return;\n\n        const currentAdapters = new Set(standardAdapters);\n        const removedAdapters = new Set(\n            prevStandardAdapters.filter((previousAdapter) => !currentAdapters.has(previousAdapter))\n        );\n        removedAdapters.forEach((adapter) => adapter.destroy());\n    }, [prevStandardAdapters, standardAdapters]);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(() => () => standardAdapters.forEach((adapter) => adapter.destroy()), []);\n\n    return useMemo(\n        () => [\n            ...standardAdapters,\n            ...adapters.filter(({ name }) => {\n                if (standardAdapters.some((standardAdapter) => standardAdapter.name === name)) {\n                    if (!warnings.has(name)) {\n                        warnings.add(name);\n                        console.warn(\n                            `${name} was registered as a Standard Wallet. The Wallet Adapter for ${name} can be removed from your app.`\n                        );\n                    }\n                    return false;\n                }\n                return true;\n            }),\n        ],\n        [standardAdapters, adapters, warnings]\n    );\n}\n\nfunction useConstant<T>(fn: () => T): T {\n    const ref = useRef<{ value: T }>();\n    if (!ref.current) {\n        ref.current = { value: fn() };\n    }\n    return ref.current.value;\n}\n\nfunction usePrevious<T>(state: T): T | undefined {\n    const ref = useRef<T>();\n    useEffect(() => {\n        ref.current = state;\n    });\n    return ref.current;\n}\n\nfunction wrapWalletsWithAdapters(wallets: readonly Wallet[]): readonly StandardWalletAdapter[] {\n    return wallets.filter(isWalletAdapterCompatibleWallet).map((wallet) => new StandardWalletAdapter({ wallet }));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
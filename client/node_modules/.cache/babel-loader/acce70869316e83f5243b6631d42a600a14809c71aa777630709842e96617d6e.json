{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BinanceSignTransaction = exports.BinancePreparedTransaction = exports.BinancePreparedMessage = exports.BinanceSDKTransaction = void 0;\nconst constants_1 = require(\"../../../constants\");\nconst params_1 = require(\"../../params\");\nconst schema_utils_1 = require(\"@trezor/schema-utils\");\nexports.BinanceSDKTransaction = schema_utils_1.Type.Object({\n  chain_id: schema_utils_1.Type.String(),\n  account_number: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  memo: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  sequence: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  source: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  transfer: schema_utils_1.Type.Optional(constants_1.PROTO.BinanceTransferMsg),\n  placeOrder: schema_utils_1.Type.Optional(constants_1.PROTO.BinanceOrderMsg),\n  cancelOrder: schema_utils_1.Type.Optional(constants_1.PROTO.BinanceCancelMsg)\n});\nexports.BinancePreparedMessage = schema_utils_1.Type.Union([schema_utils_1.Type.Intersect([constants_1.PROTO.BinanceTransferMsg, schema_utils_1.Type.Object({\n  type: schema_utils_1.Type.Literal('BinanceTransferMsg')\n})]), schema_utils_1.Type.Intersect([constants_1.PROTO.BinanceOrderMsg, schema_utils_1.Type.Object({\n  type: schema_utils_1.Type.Literal('BinanceOrderMsg')\n})]), schema_utils_1.Type.Intersect([constants_1.PROTO.BinanceCancelMsg, schema_utils_1.Type.Object({\n  type: schema_utils_1.Type.Literal('BinanceCancelMsg')\n})])]);\nexports.BinancePreparedTransaction = schema_utils_1.Type.Intersect([exports.BinanceSDKTransaction, schema_utils_1.Type.Object({\n  messages: schema_utils_1.Type.Array(exports.BinancePreparedMessage),\n  account_number: schema_utils_1.Type.Number(),\n  sequence: schema_utils_1.Type.Number(),\n  source: schema_utils_1.Type.Number()\n})]);\nexports.BinanceSignTransaction = schema_utils_1.Type.Object({\n  path: params_1.DerivationPath,\n  transaction: exports.BinanceSDKTransaction,\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","BinanceSignTransaction","BinancePreparedTransaction","BinancePreparedMessage","BinanceSDKTransaction","constants_1","require","params_1","schema_utils_1","Type","chain_id","String","account_number","Optional","Number","memo","sequence","source","transfer","PROTO","BinanceTransferMsg","placeOrder","BinanceOrderMsg","cancelOrder","BinanceCancelMsg","Union","Intersect","type","Literal","messages","Array","path","DerivationPath","transaction","chunkify","Boolean"],"sources":["C:/Users/Administrator/solana-wallet-app/node_modules/@trezor/connect/lib/types/api/binance/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BinanceSignTransaction = exports.BinancePreparedTransaction = exports.BinancePreparedMessage = exports.BinanceSDKTransaction = void 0;\nconst constants_1 = require(\"../../../constants\");\nconst params_1 = require(\"../../params\");\nconst schema_utils_1 = require(\"@trezor/schema-utils\");\nexports.BinanceSDKTransaction = schema_utils_1.Type.Object({\n    chain_id: schema_utils_1.Type.String(),\n    account_number: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    memo: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sequence: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    source: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    transfer: schema_utils_1.Type.Optional(constants_1.PROTO.BinanceTransferMsg),\n    placeOrder: schema_utils_1.Type.Optional(constants_1.PROTO.BinanceOrderMsg),\n    cancelOrder: schema_utils_1.Type.Optional(constants_1.PROTO.BinanceCancelMsg),\n});\nexports.BinancePreparedMessage = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Intersect([\n        constants_1.PROTO.BinanceTransferMsg,\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('BinanceTransferMsg'),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        constants_1.PROTO.BinanceOrderMsg,\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('BinanceOrderMsg'),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        constants_1.PROTO.BinanceCancelMsg,\n        schema_utils_1.Type.Object({\n            type: schema_utils_1.Type.Literal('BinanceCancelMsg'),\n        }),\n    ]),\n]);\nexports.BinancePreparedTransaction = schema_utils_1.Type.Intersect([\n    exports.BinanceSDKTransaction,\n    schema_utils_1.Type.Object({\n        messages: schema_utils_1.Type.Array(exports.BinancePreparedMessage),\n        account_number: schema_utils_1.Type.Number(),\n        sequence: schema_utils_1.Type.Number(),\n        source: schema_utils_1.Type.Number(),\n    }),\n]);\nexports.BinanceSignTransaction = schema_utils_1.Type.Object({\n    path: params_1.DerivationPath,\n    transaction: exports.BinanceSDKTransaction,\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\n//# sourceMappingURL=index.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
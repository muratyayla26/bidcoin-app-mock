{"ast":null,"code":"import { createSignInMessageText } from '@solana/wallet-standard-util';\n\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst SolanaMobileWalletAdapterErrorCode = {\n  ERROR_ASSOCIATION_PORT_OUT_OF_RANGE: 'ERROR_ASSOCIATION_PORT_OUT_OF_RANGE',\n  ERROR_FORBIDDEN_WALLET_BASE_URL: 'ERROR_FORBIDDEN_WALLET_BASE_URL',\n  ERROR_SECURE_CONTEXT_REQUIRED: 'ERROR_SECURE_CONTEXT_REQUIRED',\n  ERROR_SESSION_CLOSED: 'ERROR_SESSION_CLOSED',\n  ERROR_SESSION_TIMEOUT: 'ERROR_SESSION_TIMEOUT',\n  ERROR_WALLET_NOT_FOUND: 'ERROR_WALLET_NOT_FOUND',\n  ERROR_INVALID_PROTOCOL_VERSION: 'ERROR_INVALID_PROTOCOL_VERSION'\n};\nclass SolanaMobileWalletAdapterError extends Error {\n  constructor() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const [code, message, data] = args;\n    super(message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaMobileWalletAdapterError';\n  }\n}\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst SolanaMobileWalletAdapterProtocolErrorCode = {\n  // Keep these in sync with `mobilewalletadapter/common/ProtocolContract.java`.\n  ERROR_AUTHORIZATION_FAILED: -1,\n  ERROR_INVALID_PAYLOADS: -2,\n  ERROR_NOT_SIGNED: -3,\n  ERROR_NOT_SUBMITTED: -4,\n  ERROR_TOO_MANY_PAYLOADS: -5,\n  ERROR_ATTEST_ORIGIN_ANDROID: -100\n};\nclass SolanaMobileWalletAdapterProtocolError extends Error {\n  constructor() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    const [jsonRpcMessageId, code, message, data] = args;\n    super(message);\n    this.code = code;\n    this.data = data;\n    this.jsonRpcMessageId = jsonRpcMessageId;\n    this.name = 'SolanaMobileWalletAdapterProtocolError';\n  }\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\nfunction createHelloReq(ecdhPublicKey, associationKeypairPrivateKey) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const publicKeyBuffer = yield crypto.subtle.exportKey('raw', ecdhPublicKey);\n    const signatureBuffer = yield crypto.subtle.sign({\n      hash: 'SHA-256',\n      name: 'ECDSA'\n    }, associationKeypairPrivateKey, publicKeyBuffer);\n    const response = new Uint8Array(publicKeyBuffer.byteLength + signatureBuffer.byteLength);\n    response.set(new Uint8Array(publicKeyBuffer), 0);\n    response.set(new Uint8Array(signatureBuffer), publicKeyBuffer.byteLength);\n    return response;\n  });\n}\nfunction encode(input) {\n  return window.btoa(input);\n}\nfunction createSIWSMessage(payload) {\n  return createSignInMessageText(payload);\n}\nfunction createSIWSMessageBase64(payload) {\n  return encode(createSIWSMessage(payload));\n}\n\n// optional features\nconst SolanaSignTransactions = 'solana:signTransactions';\nconst SolanaCloneAuthorization = 'solana:cloneAuthorization';\nconst SolanaSignInWithSolana = 'solana:signInWithSolana';\n\n/**\n * Creates a {@link MobileWallet} proxy that handles backwards compatibility and API to RPC conversion.\n *\n * @param protocolVersion the protocol version in use for this session/request\n * @param protocolRequestHandler callback function that handles sending the RPC request to the wallet endpoint.\n * @returns a {@link MobileWallet} proxy\n */\nfunction createMobileWalletProxy(protocolVersion, protocolRequestHandler) {\n  return new Proxy({}, {\n    get(target, p) {\n      if (target[p] == null) {\n        target[p] = function (inputParams) {\n          return __awaiter(this, void 0, void 0, function* () {\n            const {\n              method,\n              params\n            } = handleMobileWalletRequest(p, inputParams, protocolVersion);\n            const result = yield protocolRequestHandler(method, params);\n            // if the request tried to sign in but the wallet did not return a sign in result, fallback on message signing\n            if (method === 'authorize' && params.sign_in_payload && !result.sign_in_result) {\n              result['sign_in_result'] = yield signInFallback(params.sign_in_payload, result, protocolRequestHandler);\n            }\n            return handleMobileWalletResponse(p, result, protocolVersion);\n          });\n        };\n      }\n      return target[p];\n    },\n    defineProperty() {\n      return false;\n    },\n    deleteProperty() {\n      return false;\n    }\n  });\n}\n/**\n * Handles all {@link MobileWallet} API requests and determines the correct MWA RPC method and params to call.\n * This handles backwards compatibility, based on the provided @protocolVersion.\n *\n * @param methodName the name of {@link MobileWallet} method that was called\n * @param methodParams the parameters that were passed to the method\n * @param protocolVersion the protocol version in use for this session/request\n * @returns the RPC request method and params that should be sent to the wallet endpoint\n */\nfunction handleMobileWalletRequest(methodName, methodParams, protocolVersion) {\n  let params = methodParams;\n  let method = methodName.toString().replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`).toLowerCase();\n  switch (methodName) {\n    case 'authorize':\n      {\n        let {\n          chain\n        } = params;\n        if (protocolVersion === 'legacy') {\n          switch (chain) {\n            case 'solana:testnet':\n              {\n                chain = 'testnet';\n                break;\n              }\n            case 'solana:devnet':\n              {\n                chain = 'devnet';\n                break;\n              }\n            case 'solana:mainnet':\n              {\n                chain = 'mainnet-beta';\n                break;\n              }\n            default:\n              {\n                chain = params.cluster;\n              }\n          }\n          params.cluster = chain;\n        } else {\n          switch (chain) {\n            case 'testnet':\n            case 'devnet':\n              {\n                chain = `solana:${chain}`;\n                break;\n              }\n            case 'mainnet-beta':\n              {\n                chain = 'solana:mainnet';\n                break;\n              }\n          }\n          params.chain = chain;\n        }\n      }\n    case 'reauthorize':\n      {\n        const {\n          auth_token,\n          identity\n        } = params;\n        if (auth_token) {\n          switch (protocolVersion) {\n            case 'legacy':\n              {\n                method = 'reauthorize';\n                params = {\n                  auth_token: auth_token,\n                  identity: identity\n                };\n                break;\n              }\n            default:\n              {\n                method = 'authorize';\n                break;\n              }\n          }\n        }\n        break;\n      }\n  }\n  return {\n    method,\n    params\n  };\n}\n/**\n * Handles all {@link MobileWallet} API responses and modifies the response for backwards compatibility, if needed\n *\n * @param method the {@link MobileWallet} method that was called\n * @param response the original response that was returned by the method call\n * @param protocolVersion the protocol version in use for this session/request\n * @returns the possibly modified response\n */\nfunction handleMobileWalletResponse(method, response, protocolVersion) {\n  switch (method) {\n    case 'getCapabilities':\n      {\n        const capabilities = response;\n        switch (protocolVersion) {\n          case 'legacy':\n            {\n              const features = [SolanaSignTransactions];\n              if (capabilities.supports_clone_authorization === true) {\n                features.push(SolanaCloneAuthorization);\n              }\n              return Object.assign(Object.assign({}, capabilities), {\n                features: features\n              });\n            }\n          case 'v1':\n            {\n              return Object.assign(Object.assign({}, capabilities), {\n                supports_sign_and_send_transactions: true,\n                supports_clone_authorization: capabilities.features.includes(SolanaCloneAuthorization)\n              });\n            }\n        }\n      }\n  }\n  return response;\n}\nfunction signInFallback(signInPayload, authorizationResult, protocolRequestHandler) {\n  var _a;\n  return __awaiter(this, void 0, void 0, function* () {\n    const domain = (_a = signInPayload.domain) !== null && _a !== void 0 ? _a : window.location.host;\n    const address = authorizationResult.accounts[0].address;\n    const siwsMessage = createSIWSMessageBase64(Object.assign(Object.assign({}, signInPayload), {\n      domain,\n      address\n    }));\n    const signMessageResult = yield protocolRequestHandler('sign_messages', {\n      addresses: [address],\n      payloads: [siwsMessage]\n    });\n    const signInResult = {\n      address: address,\n      signed_message: siwsMessage,\n      signature: signMessageResult.signed_payloads[0].slice(siwsMessage.length)\n    };\n    return signInResult;\n  });\n}\nconst SEQUENCE_NUMBER_BYTES = 4;\nfunction createSequenceNumberVector(sequenceNumber) {\n  if (sequenceNumber >= 4294967296) {\n    throw new Error('Outbound sequence number overflow. The maximum sequence number is 32-bytes.');\n  }\n  const byteArray = new ArrayBuffer(SEQUENCE_NUMBER_BYTES);\n  const view = new DataView(byteArray);\n  view.setUint32(0, sequenceNumber, /* littleEndian */false);\n  return new Uint8Array(byteArray);\n}\nconst INITIALIZATION_VECTOR_BYTES = 12;\nconst ENCODED_PUBLIC_KEY_LENGTH_BYTES = 65;\nfunction encryptMessage(plaintext, sequenceNumber, sharedSecret) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const sequenceNumberVector = createSequenceNumberVector(sequenceNumber);\n    const initializationVector = new Uint8Array(INITIALIZATION_VECTOR_BYTES);\n    crypto.getRandomValues(initializationVector);\n    const ciphertext = yield crypto.subtle.encrypt(getAlgorithmParams(sequenceNumberVector, initializationVector), sharedSecret, new TextEncoder().encode(plaintext));\n    const response = new Uint8Array(sequenceNumberVector.byteLength + initializationVector.byteLength + ciphertext.byteLength);\n    response.set(new Uint8Array(sequenceNumberVector), 0);\n    response.set(new Uint8Array(initializationVector), sequenceNumberVector.byteLength);\n    response.set(new Uint8Array(ciphertext), sequenceNumberVector.byteLength + initializationVector.byteLength);\n    return response;\n  });\n}\nfunction decryptMessage(message, sharedSecret) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const sequenceNumberVector = message.slice(0, SEQUENCE_NUMBER_BYTES);\n    const initializationVector = message.slice(SEQUENCE_NUMBER_BYTES, SEQUENCE_NUMBER_BYTES + INITIALIZATION_VECTOR_BYTES);\n    const ciphertext = message.slice(SEQUENCE_NUMBER_BYTES + INITIALIZATION_VECTOR_BYTES);\n    const plaintextBuffer = yield crypto.subtle.decrypt(getAlgorithmParams(sequenceNumberVector, initializationVector), sharedSecret, ciphertext);\n    const plaintext = getUtf8Decoder().decode(plaintextBuffer);\n    return plaintext;\n  });\n}\nfunction getAlgorithmParams(sequenceNumber, initializationVector) {\n  return {\n    additionalData: sequenceNumber,\n    iv: initializationVector,\n    name: 'AES-GCM',\n    tagLength: 128 // 16 byte tag => 128 bits\n  };\n}\nlet _utf8Decoder;\nfunction getUtf8Decoder() {\n  if (_utf8Decoder === undefined) {\n    _utf8Decoder = new TextDecoder('utf-8');\n  }\n  return _utf8Decoder;\n}\nfunction generateAssociationKeypair() {\n  return __awaiter(this, void 0, void 0, function* () {\n    return yield crypto.subtle.generateKey({\n      name: 'ECDSA',\n      namedCurve: 'P-256'\n    }, false /* extractable */, ['sign'] /* keyUsages */);\n  });\n}\nfunction generateECDHKeypair() {\n  return __awaiter(this, void 0, void 0, function* () {\n    return yield crypto.subtle.generateKey({\n      name: 'ECDH',\n      namedCurve: 'P-256'\n    }, false /* extractable */, ['deriveKey', 'deriveBits'] /* keyUsages */);\n  });\n}\nfunction encryptJsonRpcMessage(jsonRpcMessage, sharedSecret) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const plaintext = JSON.stringify(jsonRpcMessage);\n    const sequenceNumber = jsonRpcMessage.id;\n    return encryptMessage(plaintext, sequenceNumber, sharedSecret);\n  });\n}\nfunction decryptJsonRpcMessage(message, sharedSecret) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const plaintext = yield decryptMessage(message, sharedSecret);\n    const jsonRpcMessage = JSON.parse(plaintext);\n    if (Object.hasOwnProperty.call(jsonRpcMessage, 'error')) {\n      throw new SolanaMobileWalletAdapterProtocolError(jsonRpcMessage.id, jsonRpcMessage.error.code, jsonRpcMessage.error.message);\n    }\n    return jsonRpcMessage;\n  });\n}\nfunction parseHelloRsp(payloadBuffer,\n// The X9.62-encoded wallet endpoint ephemeral ECDH public keypoint.\nassociationPublicKey, ecdhPrivateKey) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const [associationPublicKeyBuffer, walletPublicKey] = yield Promise.all([crypto.subtle.exportKey('raw', associationPublicKey), crypto.subtle.importKey('raw', payloadBuffer.slice(0, ENCODED_PUBLIC_KEY_LENGTH_BYTES), {\n      name: 'ECDH',\n      namedCurve: 'P-256'\n    }, false /* extractable */, [] /* keyUsages */)]);\n    const sharedSecret = yield crypto.subtle.deriveBits({\n      name: 'ECDH',\n      public: walletPublicKey\n    }, ecdhPrivateKey, 256);\n    const ecdhSecretKey = yield crypto.subtle.importKey('raw', sharedSecret, 'HKDF', false /* extractable */, ['deriveKey'] /* keyUsages */);\n    const aesKeyMaterialVal = yield crypto.subtle.deriveKey({\n      name: 'HKDF',\n      hash: 'SHA-256',\n      salt: new Uint8Array(associationPublicKeyBuffer),\n      info: new Uint8Array()\n    }, ecdhSecretKey, {\n      name: 'AES-GCM',\n      length: 128\n    }, false /* extractable */, ['encrypt', 'decrypt']);\n    return aesKeyMaterialVal;\n  });\n}\nfunction parseSessionProps(message, sharedSecret) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const plaintext = yield decryptMessage(message, sharedSecret);\n    const jsonProperties = JSON.parse(plaintext);\n    let protocolVersion = 'legacy';\n    if (Object.hasOwnProperty.call(jsonProperties, 'v')) {\n      switch (jsonProperties.v) {\n        case 1:\n        case '1':\n        case 'v1':\n          protocolVersion = 'v1';\n          break;\n        case 'legacy':\n          protocolVersion = 'legacy';\n          break;\n        default:\n          throw new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_INVALID_PROTOCOL_VERSION, `Unknown/unsupported protocol version: ${jsonProperties.v}`);\n      }\n    }\n    return {\n      protocol_version: protocolVersion\n    };\n  });\n}\nfunction getRandomAssociationPort() {\n  return assertAssociationPort(49152 + Math.floor(Math.random() * (65535 - 49152 + 1)));\n}\nfunction assertAssociationPort(port) {\n  if (port < 49152 || port > 65535) {\n    throw new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_ASSOCIATION_PORT_OUT_OF_RANGE, `Association port number must be between 49152 and 65535. ${port} given.`, {\n      port\n    });\n  }\n  return port;\n}\n\n// https://stackoverflow.com/a/9458996/802047\nfunction arrayBufferToBase64String(buffer) {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  const len = bytes.byteLength;\n  for (let ii = 0; ii < len; ii++) {\n    binary += String.fromCharCode(bytes[ii]);\n  }\n  return window.btoa(binary);\n}\nfunction getStringWithURLUnsafeCharactersReplaced(unsafeBase64EncodedString) {\n  return unsafeBase64EncodedString.replace(/[/+=]/g, m => ({\n    '/': '_',\n    '+': '-',\n    '=': '.'\n  })[m]);\n}\nconst INTENT_NAME = 'solana-wallet';\nfunction getPathParts(pathString) {\n  return pathString\n  // Strip leading and trailing slashes\n  .replace(/(^\\/+|\\/+$)/g, '')\n  // Return an array of directories\n  .split('/');\n}\nfunction getIntentURL(methodPathname, intentUrlBase) {\n  let baseUrl = null;\n  if (intentUrlBase) {\n    try {\n      baseUrl = new URL(intentUrlBase);\n    } catch (_a) {} // eslint-disable-line no-empty\n    if ((baseUrl === null || baseUrl === void 0 ? void 0 : baseUrl.protocol) !== 'https:') {\n      throw new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_FORBIDDEN_WALLET_BASE_URL, 'Base URLs supplied by wallets must be valid `https` URLs');\n    }\n  }\n  baseUrl || (baseUrl = new URL(`${INTENT_NAME}:/`));\n  const pathname = methodPathname.startsWith('/') ?\n  // Method is an absolute path. Replace it wholesale.\n  methodPathname :\n  // Method is a relative path. Merge it with the existing one.\n  [...getPathParts(baseUrl.pathname), ...getPathParts(methodPathname)].join('/');\n  return new URL(pathname, baseUrl);\n}\nfunction getAssociateAndroidIntentURL(associationPublicKey, putativePort, associationURLBase) {\n  let protocolVersions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ['v1'];\n  return __awaiter(this, void 0, void 0, function* () {\n    const associationPort = assertAssociationPort(putativePort);\n    const exportedKey = yield crypto.subtle.exportKey('raw', associationPublicKey);\n    const encodedKey = arrayBufferToBase64String(exportedKey);\n    const url = getIntentURL('v1/associate/local', associationURLBase);\n    url.searchParams.set('association', getStringWithURLUnsafeCharactersReplaced(encodedKey));\n    url.searchParams.set('port', `${associationPort}`);\n    protocolVersions.forEach(version => {\n      url.searchParams.set('v', version);\n    });\n    return url;\n  });\n}\n\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst Browser = {\n  Firefox: 0,\n  Other: 1\n};\nfunction assertUnreachable(x) {\n  return x;\n}\nfunction getBrowser() {\n  return navigator.userAgent.indexOf('Firefox/') !== -1 ? Browser.Firefox : Browser.Other;\n}\nfunction getDetectionPromise() {\n  // Chrome and others silently fail if a custom protocol is not supported.\n  // For these, we wait to see if the browser is navigated away from in\n  // a reasonable amount of time (ie. the native wallet opened).\n  return new Promise((resolve, reject) => {\n    function cleanup() {\n      clearTimeout(timeoutId);\n      window.removeEventListener('blur', handleBlur);\n    }\n    function handleBlur() {\n      cleanup();\n      resolve();\n    }\n    window.addEventListener('blur', handleBlur);\n    const timeoutId = setTimeout(() => {\n      cleanup();\n      reject();\n    }, 2000);\n  });\n}\nlet _frame = null;\nfunction launchUrlThroughHiddenFrame(url) {\n  if (_frame == null) {\n    _frame = document.createElement('iframe');\n    _frame.style.display = 'none';\n    document.body.appendChild(_frame);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  _frame.contentWindow.location.href = url.toString();\n}\nfunction startSession(associationPublicKey, associationURLBase) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const randomAssociationPort = getRandomAssociationPort();\n    const associationUrl = yield getAssociateAndroidIntentURL(associationPublicKey, randomAssociationPort, associationURLBase);\n    if (associationUrl.protocol === 'https:') {\n      // The association URL is an Android 'App Link' or iOS 'Universal Link'.\n      // These are regular web URLs that are designed to launch an app if it\n      // is installed or load the actual target webpage if not.\n      window.location.assign(associationUrl);\n    } else {\n      // The association URL has a custom protocol (eg. `solana-wallet:`)\n      try {\n        const browser = getBrowser();\n        switch (browser) {\n          case Browser.Firefox:\n            // If a custom protocol is not supported in Firefox, it throws.\n            launchUrlThroughHiddenFrame(associationUrl);\n            // If we reached this line, it's supported.\n            break;\n          case Browser.Other:\n            {\n              const detectionPromise = getDetectionPromise();\n              window.location.assign(associationUrl);\n              yield detectionPromise;\n              break;\n            }\n          default:\n            assertUnreachable(browser);\n        }\n      } catch (e) {\n        throw new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_WALLET_NOT_FOUND, 'Found no installed wallet that supports the mobile wallet protocol.');\n      }\n    }\n    return randomAssociationPort;\n  });\n}\nconst WEBSOCKET_CONNECTION_CONFIG = {\n  /**\n   * 300 milliseconds is a generally accepted threshold for what someone\n   * would consider an acceptable response time for a user interface\n   * after having performed a low-attention tapping task. We set the initial\n   * interval at which we wait for the wallet to set up the websocket at\n   * half this, as per the Nyquist frequency, with a progressive backoff\n   * sequence from there. The total wait time is 30s, which allows for the\n   * user to be presented with a disambiguation dialog, select a wallet, and\n   * for the wallet app to subsequently start.\n   */\n  retryDelayScheduleMs: [150, 150, 200, 500, 500, 750, 750, 1000],\n  timeoutMs: 30000\n};\nconst WEBSOCKET_PROTOCOL = 'com.solana.mobilewalletadapter.v1';\nfunction assertSecureContext() {\n  if (typeof window === 'undefined' || window.isSecureContext !== true) {\n    throw new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_SECURE_CONTEXT_REQUIRED, 'The mobile wallet adapter protocol must be used in a secure context (`https`).');\n  }\n}\nfunction assertSecureEndpointSpecificURI(walletUriBase) {\n  let url;\n  try {\n    url = new URL(walletUriBase);\n  } catch (_a) {\n    throw new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_FORBIDDEN_WALLET_BASE_URL, 'Invalid base URL supplied by wallet');\n  }\n  if (url.protocol !== 'https:') {\n    throw new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_FORBIDDEN_WALLET_BASE_URL, 'Base URLs supplied by wallets must be valid `https` URLs');\n  }\n}\nfunction getSequenceNumberFromByteArray(byteArray) {\n  const view = new DataView(byteArray);\n  return view.getUint32(0, /* littleEndian */false);\n}\nfunction transact(callback, config) {\n  return __awaiter(this, void 0, void 0, function* () {\n    assertSecureContext();\n    const associationKeypair = yield generateAssociationKeypair();\n    const sessionPort = yield startSession(associationKeypair.publicKey, config === null || config === void 0 ? void 0 : config.baseUri);\n    const websocketURL = `ws://localhost:${sessionPort}/solana-wallet`;\n    let connectionStartTime;\n    const getNextRetryDelayMs = (() => {\n      const schedule = [...WEBSOCKET_CONNECTION_CONFIG.retryDelayScheduleMs];\n      return () => schedule.length > 1 ? schedule.shift() : schedule[0];\n    })();\n    let nextJsonRpcMessageId = 1;\n    let lastKnownInboundSequenceNumber = 0;\n    let state = {\n      __type: 'disconnected'\n    };\n    return new Promise((resolve, reject) => {\n      let socket;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const jsonRpcResponsePromises = {};\n      const handleOpen = () => __awaiter(this, void 0, void 0, function* () {\n        if (state.__type !== 'connecting') {\n          console.warn('Expected adapter state to be `connecting` at the moment the websocket opens. ' + `Got \\`${state.__type}\\`.`);\n          return;\n        }\n        const {\n          associationKeypair\n        } = state;\n        socket.removeEventListener('open', handleOpen);\n        const ecdhKeypair = yield generateECDHKeypair();\n        socket.send(yield createHelloReq(ecdhKeypair.publicKey, associationKeypair.privateKey));\n        state = {\n          __type: 'hello_req_sent',\n          associationPublicKey: associationKeypair.publicKey,\n          ecdhPrivateKey: ecdhKeypair.privateKey\n        };\n      });\n      const handleClose = evt => {\n        if (evt.wasClean) {\n          state = {\n            __type: 'disconnected'\n          };\n        } else {\n          reject(new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_SESSION_CLOSED, `The wallet session dropped unexpectedly (${evt.code}: ${evt.reason}).`, {\n            closeEvent: evt\n          }));\n        }\n        disposeSocket();\n      };\n      const handleError = _evt => __awaiter(this, void 0, void 0, function* () {\n        disposeSocket();\n        if (Date.now() - connectionStartTime >= WEBSOCKET_CONNECTION_CONFIG.timeoutMs) {\n          reject(new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_SESSION_TIMEOUT, `Failed to connect to the wallet websocket on port ${sessionPort}.`));\n        } else {\n          yield new Promise(resolve => {\n            const retryDelayMs = getNextRetryDelayMs();\n            retryWaitTimeoutId = window.setTimeout(resolve, retryDelayMs);\n          });\n          attemptSocketConnection();\n        }\n      });\n      const handleMessage = evt => __awaiter(this, void 0, void 0, function* () {\n        const responseBuffer = yield evt.data.arrayBuffer();\n        switch (state.__type) {\n          case 'connected':\n            try {\n              const sequenceNumberVector = responseBuffer.slice(0, SEQUENCE_NUMBER_BYTES);\n              const sequenceNumber = getSequenceNumberFromByteArray(sequenceNumberVector);\n              if (sequenceNumber !== lastKnownInboundSequenceNumber + 1) {\n                throw new Error('Encrypted message has invalid sequence number');\n              }\n              lastKnownInboundSequenceNumber = sequenceNumber;\n              const jsonRpcMessage = yield decryptJsonRpcMessage(responseBuffer, state.sharedSecret);\n              const responsePromise = jsonRpcResponsePromises[jsonRpcMessage.id];\n              delete jsonRpcResponsePromises[jsonRpcMessage.id];\n              responsePromise.resolve(jsonRpcMessage.result);\n            } catch (e) {\n              if (e instanceof SolanaMobileWalletAdapterProtocolError) {\n                const responsePromise = jsonRpcResponsePromises[e.jsonRpcMessageId];\n                delete jsonRpcResponsePromises[e.jsonRpcMessageId];\n                responsePromise.reject(e);\n              } else {\n                throw e;\n              }\n            }\n            break;\n          case 'hello_req_sent':\n            {\n              const sharedSecret = yield parseHelloRsp(responseBuffer, state.associationPublicKey, state.ecdhPrivateKey);\n              const sessionPropertiesBuffer = responseBuffer.slice(ENCODED_PUBLIC_KEY_LENGTH_BYTES);\n              const sessionProperties = sessionPropertiesBuffer.byteLength !== 0 ? yield (() => __awaiter(this, void 0, void 0, function* () {\n                const sequenceNumberVector = sessionPropertiesBuffer.slice(0, SEQUENCE_NUMBER_BYTES);\n                const sequenceNumber = getSequenceNumberFromByteArray(sequenceNumberVector);\n                if (sequenceNumber !== lastKnownInboundSequenceNumber + 1) {\n                  throw new Error('Encrypted message has invalid sequence number');\n                }\n                lastKnownInboundSequenceNumber = sequenceNumber;\n                return parseSessionProps(sessionPropertiesBuffer, sharedSecret);\n              }))() : {\n                protocol_version: 'legacy'\n              };\n              state = {\n                __type: 'connected',\n                sharedSecret,\n                sessionProperties\n              };\n              const wallet = createMobileWalletProxy(sessionProperties.protocol_version, (method, params) => __awaiter(this, void 0, void 0, function* () {\n                const id = nextJsonRpcMessageId++;\n                socket.send(yield encryptJsonRpcMessage({\n                  id,\n                  jsonrpc: '2.0',\n                  method,\n                  params: params !== null && params !== void 0 ? params : {}\n                }, sharedSecret));\n                return new Promise((resolve, reject) => {\n                  jsonRpcResponsePromises[id] = {\n                    resolve(result) {\n                      switch (method) {\n                        case 'authorize':\n                        case 'reauthorize':\n                          {\n                            const {\n                              wallet_uri_base\n                            } = result;\n                            if (wallet_uri_base != null) {\n                              try {\n                                assertSecureEndpointSpecificURI(wallet_uri_base);\n                              } catch (e) {\n                                reject(e);\n                                return;\n                              }\n                            }\n                            break;\n                          }\n                      }\n                      resolve(result);\n                    },\n                    reject\n                  };\n                });\n              }));\n              try {\n                resolve(yield callback(wallet));\n              } catch (e) {\n                reject(e);\n              } finally {\n                disposeSocket();\n                socket.close();\n              }\n              break;\n            }\n        }\n      });\n      let disposeSocket;\n      let retryWaitTimeoutId;\n      const attemptSocketConnection = () => {\n        if (disposeSocket) {\n          disposeSocket();\n        }\n        state = {\n          __type: 'connecting',\n          associationKeypair\n        };\n        if (connectionStartTime === undefined) {\n          connectionStartTime = Date.now();\n        }\n        socket = new WebSocket(websocketURL, [WEBSOCKET_PROTOCOL]);\n        socket.addEventListener('open', handleOpen);\n        socket.addEventListener('close', handleClose);\n        socket.addEventListener('error', handleError);\n        socket.addEventListener('message', handleMessage);\n        disposeSocket = () => {\n          window.clearTimeout(retryWaitTimeoutId);\n          socket.removeEventListener('open', handleOpen);\n          socket.removeEventListener('close', handleClose);\n          socket.removeEventListener('error', handleError);\n          socket.removeEventListener('message', handleMessage);\n        };\n      };\n      attemptSocketConnection();\n    });\n  });\n}\nexport { SolanaCloneAuthorization, SolanaMobileWalletAdapterError, SolanaMobileWalletAdapterErrorCode, SolanaMobileWalletAdapterProtocolError, SolanaMobileWalletAdapterProtocolErrorCode, SolanaSignInWithSolana, SolanaSignTransactions, transact };","map":{"version":3,"names":["createSignInMessageText","SolanaMobileWalletAdapterErrorCode","ERROR_ASSOCIATION_PORT_OUT_OF_RANGE","ERROR_FORBIDDEN_WALLET_BASE_URL","ERROR_SECURE_CONTEXT_REQUIRED","ERROR_SESSION_CLOSED","ERROR_SESSION_TIMEOUT","ERROR_WALLET_NOT_FOUND","ERROR_INVALID_PROTOCOL_VERSION","SolanaMobileWalletAdapterError","Error","constructor","_len","arguments","length","args","Array","_key","code","message","data","name","SolanaMobileWalletAdapterProtocolErrorCode","ERROR_AUTHORIZATION_FAILED","ERROR_INVALID_PAYLOADS","ERROR_NOT_SIGNED","ERROR_NOT_SUBMITTED","ERROR_TOO_MANY_PAYLOADS","ERROR_ATTEST_ORIGIN_ANDROID","SolanaMobileWalletAdapterProtocolError","_len2","_key2","jsonRpcMessageId","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","createHelloReq","ecdhPublicKey","associationKeypairPrivateKey","publicKeyBuffer","crypto","subtle","exportKey","signatureBuffer","sign","hash","response","Uint8Array","byteLength","set","encode","input","window","btoa","createSIWSMessage","payload","createSIWSMessageBase64","SolanaSignTransactions","SolanaCloneAuthorization","SolanaSignInWithSolana","createMobileWalletProxy","protocolVersion","protocolRequestHandler","Proxy","get","target","p","inputParams","method","params","handleMobileWalletRequest","sign_in_payload","sign_in_result","signInFallback","handleMobileWalletResponse","defineProperty","deleteProperty","methodName","methodParams","toString","replace","letter","toLowerCase","chain","cluster","auth_token","identity","capabilities","features","supports_clone_authorization","push","Object","assign","supports_sign_and_send_transactions","includes","signInPayload","authorizationResult","_a","domain","location","host","address","accounts","siwsMessage","signMessageResult","addresses","payloads","signInResult","signed_message","signature","signed_payloads","slice","SEQUENCE_NUMBER_BYTES","createSequenceNumberVector","sequenceNumber","byteArray","ArrayBuffer","view","DataView","setUint32","INITIALIZATION_VECTOR_BYTES","ENCODED_PUBLIC_KEY_LENGTH_BYTES","encryptMessage","plaintext","sharedSecret","sequenceNumberVector","initializationVector","getRandomValues","ciphertext","encrypt","getAlgorithmParams","TextEncoder","decryptMessage","plaintextBuffer","decrypt","getUtf8Decoder","decode","additionalData","iv","tagLength","_utf8Decoder","undefined","TextDecoder","generateAssociationKeypair","generateKey","namedCurve","generateECDHKeypair","encryptJsonRpcMessage","jsonRpcMessage","JSON","stringify","id","decryptJsonRpcMessage","parse","hasOwnProperty","call","error","parseHelloRsp","payloadBuffer","associationPublicKey","ecdhPrivateKey","associationPublicKeyBuffer","walletPublicKey","all","importKey","deriveBits","public","ecdhSecretKey","aesKeyMaterialVal","deriveKey","salt","info","parseSessionProps","jsonProperties","v","protocol_version","getRandomAssociationPort","assertAssociationPort","Math","floor","random","port","arrayBufferToBase64String","buffer","binary","bytes","len","ii","String","fromCharCode","getStringWithURLUnsafeCharactersReplaced","unsafeBase64EncodedString","m","INTENT_NAME","getPathParts","pathString","split","getIntentURL","methodPathname","intentUrlBase","baseUrl","URL","protocol","pathname","startsWith","join","getAssociateAndroidIntentURL","putativePort","associationURLBase","protocolVersions","associationPort","exportedKey","encodedKey","url","searchParams","forEach","version","Browser","Firefox","Other","assertUnreachable","x","getBrowser","navigator","userAgent","indexOf","getDetectionPromise","cleanup","clearTimeout","timeoutId","removeEventListener","handleBlur","addEventListener","setTimeout","_frame","launchUrlThroughHiddenFrame","document","createElement","style","display","body","appendChild","contentWindow","href","startSession","randomAssociationPort","associationUrl","browser","detectionPromise","WEBSOCKET_CONNECTION_CONFIG","retryDelayScheduleMs","timeoutMs","WEBSOCKET_PROTOCOL","assertSecureContext","isSecureContext","assertSecureEndpointSpecificURI","walletUriBase","getSequenceNumberFromByteArray","getUint32","transact","callback","config","associationKeypair","sessionPort","publicKey","baseUri","websocketURL","connectionStartTime","getNextRetryDelayMs","schedule","shift","nextJsonRpcMessageId","lastKnownInboundSequenceNumber","state","__type","socket","jsonRpcResponsePromises","handleOpen","console","warn","ecdhKeypair","send","privateKey","handleClose","evt","wasClean","reason","closeEvent","disposeSocket","handleError","_evt","Date","now","retryDelayMs","retryWaitTimeoutId","attemptSocketConnection","handleMessage","responseBuffer","arrayBuffer","responsePromise","sessionPropertiesBuffer","sessionProperties","wallet","jsonrpc","wallet_uri_base","close","WebSocket"],"sources":["C:/Users/Administrator/solana-wallet-app/client/node_modules/@solana-mobile/mobile-wallet-adapter-protocol/lib/esm/index.js"],"sourcesContent":["import { createSignInMessageText } from '@solana/wallet-standard-util';\n\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst SolanaMobileWalletAdapterErrorCode = {\n    ERROR_ASSOCIATION_PORT_OUT_OF_RANGE: 'ERROR_ASSOCIATION_PORT_OUT_OF_RANGE',\n    ERROR_FORBIDDEN_WALLET_BASE_URL: 'ERROR_FORBIDDEN_WALLET_BASE_URL',\n    ERROR_SECURE_CONTEXT_REQUIRED: 'ERROR_SECURE_CONTEXT_REQUIRED',\n    ERROR_SESSION_CLOSED: 'ERROR_SESSION_CLOSED',\n    ERROR_SESSION_TIMEOUT: 'ERROR_SESSION_TIMEOUT',\n    ERROR_WALLET_NOT_FOUND: 'ERROR_WALLET_NOT_FOUND',\n    ERROR_INVALID_PROTOCOL_VERSION: 'ERROR_INVALID_PROTOCOL_VERSION',\n};\nclass SolanaMobileWalletAdapterError extends Error {\n    constructor(...args) {\n        const [code, message, data] = args;\n        super(message);\n        this.code = code;\n        this.data = data;\n        this.name = 'SolanaMobileWalletAdapterError';\n    }\n}\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst SolanaMobileWalletAdapterProtocolErrorCode = {\n    // Keep these in sync with `mobilewalletadapter/common/ProtocolContract.java`.\n    ERROR_AUTHORIZATION_FAILED: -1,\n    ERROR_INVALID_PAYLOADS: -2,\n    ERROR_NOT_SIGNED: -3,\n    ERROR_NOT_SUBMITTED: -4,\n    ERROR_TOO_MANY_PAYLOADS: -5,\n    ERROR_ATTEST_ORIGIN_ANDROID: -100,\n};\nclass SolanaMobileWalletAdapterProtocolError extends Error {\n    constructor(...args) {\n        const [jsonRpcMessageId, code, message, data] = args;\n        super(message);\n        this.code = code;\n        this.data = data;\n        this.jsonRpcMessageId = jsonRpcMessageId;\n        this.name = 'SolanaMobileWalletAdapterProtocolError';\n    }\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\nfunction createHelloReq(ecdhPublicKey, associationKeypairPrivateKey) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const publicKeyBuffer = yield crypto.subtle.exportKey('raw', ecdhPublicKey);\n        const signatureBuffer = yield crypto.subtle.sign({ hash: 'SHA-256', name: 'ECDSA' }, associationKeypairPrivateKey, publicKeyBuffer);\n        const response = new Uint8Array(publicKeyBuffer.byteLength + signatureBuffer.byteLength);\n        response.set(new Uint8Array(publicKeyBuffer), 0);\n        response.set(new Uint8Array(signatureBuffer), publicKeyBuffer.byteLength);\n        return response;\n    });\n}\n\nfunction encode(input) {\n    return window.btoa(input);\n}\n\nfunction createSIWSMessage(payload) {\n    return createSignInMessageText(payload);\n}\nfunction createSIWSMessageBase64(payload) {\n    return encode(createSIWSMessage(payload));\n}\n\n// optional features\nconst SolanaSignTransactions = 'solana:signTransactions';\nconst SolanaCloneAuthorization = 'solana:cloneAuthorization';\nconst SolanaSignInWithSolana = 'solana:signInWithSolana';\n\n/**\n * Creates a {@link MobileWallet} proxy that handles backwards compatibility and API to RPC conversion.\n *\n * @param protocolVersion the protocol version in use for this session/request\n * @param protocolRequestHandler callback function that handles sending the RPC request to the wallet endpoint.\n * @returns a {@link MobileWallet} proxy\n */\nfunction createMobileWalletProxy(protocolVersion, protocolRequestHandler) {\n    return new Proxy({}, {\n        get(target, p) {\n            if (target[p] == null) {\n                target[p] = function (inputParams) {\n                    return __awaiter(this, void 0, void 0, function* () {\n                        const { method, params } = handleMobileWalletRequest(p, inputParams, protocolVersion);\n                        const result = yield protocolRequestHandler(method, params);\n                        // if the request tried to sign in but the wallet did not return a sign in result, fallback on message signing\n                        if (method === 'authorize' && params.sign_in_payload && !result.sign_in_result) {\n                            result['sign_in_result'] = yield signInFallback(params.sign_in_payload, result, protocolRequestHandler);\n                        }\n                        return handleMobileWalletResponse(p, result, protocolVersion);\n                    });\n                };\n            }\n            return target[p];\n        },\n        defineProperty() {\n            return false;\n        },\n        deleteProperty() {\n            return false;\n        },\n    });\n}\n/**\n * Handles all {@link MobileWallet} API requests and determines the correct MWA RPC method and params to call.\n * This handles backwards compatibility, based on the provided @protocolVersion.\n *\n * @param methodName the name of {@link MobileWallet} method that was called\n * @param methodParams the parameters that were passed to the method\n * @param protocolVersion the protocol version in use for this session/request\n * @returns the RPC request method and params that should be sent to the wallet endpoint\n */\nfunction handleMobileWalletRequest(methodName, methodParams, protocolVersion) {\n    let params = methodParams;\n    let method = methodName\n        .toString()\n        .replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`)\n        .toLowerCase();\n    switch (methodName) {\n        case 'authorize': {\n            let { chain } = params;\n            if (protocolVersion === 'legacy') {\n                switch (chain) {\n                    case 'solana:testnet': {\n                        chain = 'testnet';\n                        break;\n                    }\n                    case 'solana:devnet': {\n                        chain = 'devnet';\n                        break;\n                    }\n                    case 'solana:mainnet': {\n                        chain = 'mainnet-beta';\n                        break;\n                    }\n                    default: {\n                        chain = params.cluster;\n                    }\n                }\n                params.cluster = chain;\n            }\n            else {\n                switch (chain) {\n                    case 'testnet':\n                    case 'devnet': {\n                        chain = `solana:${chain}`;\n                        break;\n                    }\n                    case 'mainnet-beta': {\n                        chain = 'solana:mainnet';\n                        break;\n                    }\n                }\n                params.chain = chain;\n            }\n        }\n        case 'reauthorize': {\n            const { auth_token, identity } = params;\n            if (auth_token) {\n                switch (protocolVersion) {\n                    case 'legacy': {\n                        method = 'reauthorize';\n                        params = { auth_token: auth_token, identity: identity };\n                        break;\n                    }\n                    default: {\n                        method = 'authorize';\n                        break;\n                    }\n                }\n            }\n            break;\n        }\n    }\n    return { method, params };\n}\n/**\n * Handles all {@link MobileWallet} API responses and modifies the response for backwards compatibility, if needed\n *\n * @param method the {@link MobileWallet} method that was called\n * @param response the original response that was returned by the method call\n * @param protocolVersion the protocol version in use for this session/request\n * @returns the possibly modified response\n */\nfunction handleMobileWalletResponse(method, response, protocolVersion) {\n    switch (method) {\n        case 'getCapabilities': {\n            const capabilities = response;\n            switch (protocolVersion) {\n                case 'legacy': {\n                    const features = [SolanaSignTransactions];\n                    if (capabilities.supports_clone_authorization === true) {\n                        features.push(SolanaCloneAuthorization);\n                    }\n                    return Object.assign(Object.assign({}, capabilities), { features: features });\n                }\n                case 'v1': {\n                    return Object.assign(Object.assign({}, capabilities), { supports_sign_and_send_transactions: true, supports_clone_authorization: capabilities.features.includes(SolanaCloneAuthorization) });\n                }\n            }\n        }\n    }\n    return response;\n}\nfunction signInFallback(signInPayload, authorizationResult, protocolRequestHandler) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const domain = (_a = signInPayload.domain) !== null && _a !== void 0 ? _a : window.location.host;\n        const address = authorizationResult.accounts[0].address;\n        const siwsMessage = createSIWSMessageBase64(Object.assign(Object.assign({}, signInPayload), { domain, address }));\n        const signMessageResult = yield protocolRequestHandler('sign_messages', {\n            addresses: [address],\n            payloads: [siwsMessage]\n        });\n        const signInResult = {\n            address: address,\n            signed_message: siwsMessage,\n            signature: signMessageResult.signed_payloads[0].slice(siwsMessage.length)\n        };\n        return signInResult;\n    });\n}\n\nconst SEQUENCE_NUMBER_BYTES = 4;\nfunction createSequenceNumberVector(sequenceNumber) {\n    if (sequenceNumber >= 4294967296) {\n        throw new Error('Outbound sequence number overflow. The maximum sequence number is 32-bytes.');\n    }\n    const byteArray = new ArrayBuffer(SEQUENCE_NUMBER_BYTES);\n    const view = new DataView(byteArray);\n    view.setUint32(0, sequenceNumber, /* littleEndian */ false);\n    return new Uint8Array(byteArray);\n}\n\nconst INITIALIZATION_VECTOR_BYTES = 12;\nconst ENCODED_PUBLIC_KEY_LENGTH_BYTES = 65;\nfunction encryptMessage(plaintext, sequenceNumber, sharedSecret) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const sequenceNumberVector = createSequenceNumberVector(sequenceNumber);\n        const initializationVector = new Uint8Array(INITIALIZATION_VECTOR_BYTES);\n        crypto.getRandomValues(initializationVector);\n        const ciphertext = yield crypto.subtle.encrypt(getAlgorithmParams(sequenceNumberVector, initializationVector), sharedSecret, new TextEncoder().encode(plaintext));\n        const response = new Uint8Array(sequenceNumberVector.byteLength + initializationVector.byteLength + ciphertext.byteLength);\n        response.set(new Uint8Array(sequenceNumberVector), 0);\n        response.set(new Uint8Array(initializationVector), sequenceNumberVector.byteLength);\n        response.set(new Uint8Array(ciphertext), sequenceNumberVector.byteLength + initializationVector.byteLength);\n        return response;\n    });\n}\nfunction decryptMessage(message, sharedSecret) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const sequenceNumberVector = message.slice(0, SEQUENCE_NUMBER_BYTES);\n        const initializationVector = message.slice(SEQUENCE_NUMBER_BYTES, SEQUENCE_NUMBER_BYTES + INITIALIZATION_VECTOR_BYTES);\n        const ciphertext = message.slice(SEQUENCE_NUMBER_BYTES + INITIALIZATION_VECTOR_BYTES);\n        const plaintextBuffer = yield crypto.subtle.decrypt(getAlgorithmParams(sequenceNumberVector, initializationVector), sharedSecret, ciphertext);\n        const plaintext = getUtf8Decoder().decode(plaintextBuffer);\n        return plaintext;\n    });\n}\nfunction getAlgorithmParams(sequenceNumber, initializationVector) {\n    return {\n        additionalData: sequenceNumber,\n        iv: initializationVector,\n        name: 'AES-GCM',\n        tagLength: 128, // 16 byte tag => 128 bits\n    };\n}\nlet _utf8Decoder;\nfunction getUtf8Decoder() {\n    if (_utf8Decoder === undefined) {\n        _utf8Decoder = new TextDecoder('utf-8');\n    }\n    return _utf8Decoder;\n}\n\nfunction generateAssociationKeypair() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield crypto.subtle.generateKey({\n            name: 'ECDSA',\n            namedCurve: 'P-256',\n        }, false /* extractable */, ['sign'] /* keyUsages */);\n    });\n}\n\nfunction generateECDHKeypair() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield crypto.subtle.generateKey({\n            name: 'ECDH',\n            namedCurve: 'P-256',\n        }, false /* extractable */, ['deriveKey', 'deriveBits'] /* keyUsages */);\n    });\n}\n\nfunction encryptJsonRpcMessage(jsonRpcMessage, sharedSecret) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const plaintext = JSON.stringify(jsonRpcMessage);\n        const sequenceNumber = jsonRpcMessage.id;\n        return encryptMessage(plaintext, sequenceNumber, sharedSecret);\n    });\n}\nfunction decryptJsonRpcMessage(message, sharedSecret) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const plaintext = yield decryptMessage(message, sharedSecret);\n        const jsonRpcMessage = JSON.parse(plaintext);\n        if (Object.hasOwnProperty.call(jsonRpcMessage, 'error')) {\n            throw new SolanaMobileWalletAdapterProtocolError(jsonRpcMessage.id, jsonRpcMessage.error.code, jsonRpcMessage.error.message);\n        }\n        return jsonRpcMessage;\n    });\n}\n\nfunction parseHelloRsp(payloadBuffer, // The X9.62-encoded wallet endpoint ephemeral ECDH public keypoint.\nassociationPublicKey, ecdhPrivateKey) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [associationPublicKeyBuffer, walletPublicKey] = yield Promise.all([\n            crypto.subtle.exportKey('raw', associationPublicKey),\n            crypto.subtle.importKey('raw', payloadBuffer.slice(0, ENCODED_PUBLIC_KEY_LENGTH_BYTES), { name: 'ECDH', namedCurve: 'P-256' }, false /* extractable */, [] /* keyUsages */),\n        ]);\n        const sharedSecret = yield crypto.subtle.deriveBits({ name: 'ECDH', public: walletPublicKey }, ecdhPrivateKey, 256);\n        const ecdhSecretKey = yield crypto.subtle.importKey('raw', sharedSecret, 'HKDF', false /* extractable */, ['deriveKey'] /* keyUsages */);\n        const aesKeyMaterialVal = yield crypto.subtle.deriveKey({\n            name: 'HKDF',\n            hash: 'SHA-256',\n            salt: new Uint8Array(associationPublicKeyBuffer),\n            info: new Uint8Array(),\n        }, ecdhSecretKey, { name: 'AES-GCM', length: 128 }, false /* extractable */, ['encrypt', 'decrypt']);\n        return aesKeyMaterialVal;\n    });\n}\n\nfunction parseSessionProps(message, sharedSecret) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const plaintext = yield decryptMessage(message, sharedSecret);\n        const jsonProperties = JSON.parse(plaintext);\n        let protocolVersion = 'legacy';\n        if (Object.hasOwnProperty.call(jsonProperties, 'v')) {\n            switch (jsonProperties.v) {\n                case 1:\n                case '1':\n                case 'v1':\n                    protocolVersion = 'v1';\n                    break;\n                case 'legacy':\n                    protocolVersion = 'legacy';\n                    break;\n                default:\n                    throw new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_INVALID_PROTOCOL_VERSION, `Unknown/unsupported protocol version: ${jsonProperties.v}`);\n            }\n        }\n        return ({\n            protocol_version: protocolVersion\n        });\n    });\n}\n\nfunction getRandomAssociationPort() {\n    return assertAssociationPort(49152 + Math.floor(Math.random() * (65535 - 49152 + 1)));\n}\nfunction assertAssociationPort(port) {\n    if (port < 49152 || port > 65535) {\n        throw new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_ASSOCIATION_PORT_OUT_OF_RANGE, `Association port number must be between 49152 and 65535. ${port} given.`, { port });\n    }\n    return port;\n}\n\n// https://stackoverflow.com/a/9458996/802047\nfunction arrayBufferToBase64String(buffer) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let ii = 0; ii < len; ii++) {\n        binary += String.fromCharCode(bytes[ii]);\n    }\n    return window.btoa(binary);\n}\n\nfunction getStringWithURLUnsafeCharactersReplaced(unsafeBase64EncodedString) {\n    return unsafeBase64EncodedString.replace(/[/+=]/g, (m) => ({\n        '/': '_',\n        '+': '-',\n        '=': '.',\n    }[m]));\n}\n\nconst INTENT_NAME = 'solana-wallet';\nfunction getPathParts(pathString) {\n    return (pathString\n        // Strip leading and trailing slashes\n        .replace(/(^\\/+|\\/+$)/g, '')\n        // Return an array of directories\n        .split('/'));\n}\nfunction getIntentURL(methodPathname, intentUrlBase) {\n    let baseUrl = null;\n    if (intentUrlBase) {\n        try {\n            baseUrl = new URL(intentUrlBase);\n        }\n        catch (_a) { } // eslint-disable-line no-empty\n        if ((baseUrl === null || baseUrl === void 0 ? void 0 : baseUrl.protocol) !== 'https:') {\n            throw new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_FORBIDDEN_WALLET_BASE_URL, 'Base URLs supplied by wallets must be valid `https` URLs');\n        }\n    }\n    baseUrl || (baseUrl = new URL(`${INTENT_NAME}:/`));\n    const pathname = methodPathname.startsWith('/')\n        ? // Method is an absolute path. Replace it wholesale.\n            methodPathname\n        : // Method is a relative path. Merge it with the existing one.\n            [...getPathParts(baseUrl.pathname), ...getPathParts(methodPathname)].join('/');\n    return new URL(pathname, baseUrl);\n}\nfunction getAssociateAndroidIntentURL(associationPublicKey, putativePort, associationURLBase, protocolVersions = ['v1']) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const associationPort = assertAssociationPort(putativePort);\n        const exportedKey = yield crypto.subtle.exportKey('raw', associationPublicKey);\n        const encodedKey = arrayBufferToBase64String(exportedKey);\n        const url = getIntentURL('v1/associate/local', associationURLBase);\n        url.searchParams.set('association', getStringWithURLUnsafeCharactersReplaced(encodedKey));\n        url.searchParams.set('port', `${associationPort}`);\n        protocolVersions.forEach((version) => {\n            url.searchParams.set('v', version);\n        });\n        return url;\n    });\n}\n\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst Browser = {\n    Firefox: 0,\n    Other: 1,\n};\nfunction assertUnreachable(x) {\n    return x;\n}\nfunction getBrowser() {\n    return navigator.userAgent.indexOf('Firefox/') !== -1 ? Browser.Firefox : Browser.Other;\n}\nfunction getDetectionPromise() {\n    // Chrome and others silently fail if a custom protocol is not supported.\n    // For these, we wait to see if the browser is navigated away from in\n    // a reasonable amount of time (ie. the native wallet opened).\n    return new Promise((resolve, reject) => {\n        function cleanup() {\n            clearTimeout(timeoutId);\n            window.removeEventListener('blur', handleBlur);\n        }\n        function handleBlur() {\n            cleanup();\n            resolve();\n        }\n        window.addEventListener('blur', handleBlur);\n        const timeoutId = setTimeout(() => {\n            cleanup();\n            reject();\n        }, 2000);\n    });\n}\nlet _frame = null;\nfunction launchUrlThroughHiddenFrame(url) {\n    if (_frame == null) {\n        _frame = document.createElement('iframe');\n        _frame.style.display = 'none';\n        document.body.appendChild(_frame);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    _frame.contentWindow.location.href = url.toString();\n}\nfunction startSession(associationPublicKey, associationURLBase) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const randomAssociationPort = getRandomAssociationPort();\n        const associationUrl = yield getAssociateAndroidIntentURL(associationPublicKey, randomAssociationPort, associationURLBase);\n        if (associationUrl.protocol === 'https:') {\n            // The association URL is an Android 'App Link' or iOS 'Universal Link'.\n            // These are regular web URLs that are designed to launch an app if it\n            // is installed or load the actual target webpage if not.\n            window.location.assign(associationUrl);\n        }\n        else {\n            // The association URL has a custom protocol (eg. `solana-wallet:`)\n            try {\n                const browser = getBrowser();\n                switch (browser) {\n                    case Browser.Firefox:\n                        // If a custom protocol is not supported in Firefox, it throws.\n                        launchUrlThroughHiddenFrame(associationUrl);\n                        // If we reached this line, it's supported.\n                        break;\n                    case Browser.Other: {\n                        const detectionPromise = getDetectionPromise();\n                        window.location.assign(associationUrl);\n                        yield detectionPromise;\n                        break;\n                    }\n                    default:\n                        assertUnreachable(browser);\n                }\n            }\n            catch (e) {\n                throw new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_WALLET_NOT_FOUND, 'Found no installed wallet that supports the mobile wallet protocol.');\n            }\n        }\n        return randomAssociationPort;\n    });\n}\n\nconst WEBSOCKET_CONNECTION_CONFIG = {\n    /**\n     * 300 milliseconds is a generally accepted threshold for what someone\n     * would consider an acceptable response time for a user interface\n     * after having performed a low-attention tapping task. We set the initial\n     * interval at which we wait for the wallet to set up the websocket at\n     * half this, as per the Nyquist frequency, with a progressive backoff\n     * sequence from there. The total wait time is 30s, which allows for the\n     * user to be presented with a disambiguation dialog, select a wallet, and\n     * for the wallet app to subsequently start.\n     */\n    retryDelayScheduleMs: [150, 150, 200, 500, 500, 750, 750, 1000],\n    timeoutMs: 30000,\n};\nconst WEBSOCKET_PROTOCOL = 'com.solana.mobilewalletadapter.v1';\nfunction assertSecureContext() {\n    if (typeof window === 'undefined' || window.isSecureContext !== true) {\n        throw new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_SECURE_CONTEXT_REQUIRED, 'The mobile wallet adapter protocol must be used in a secure context (`https`).');\n    }\n}\nfunction assertSecureEndpointSpecificURI(walletUriBase) {\n    let url;\n    try {\n        url = new URL(walletUriBase);\n    }\n    catch (_a) {\n        throw new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_FORBIDDEN_WALLET_BASE_URL, 'Invalid base URL supplied by wallet');\n    }\n    if (url.protocol !== 'https:') {\n        throw new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_FORBIDDEN_WALLET_BASE_URL, 'Base URLs supplied by wallets must be valid `https` URLs');\n    }\n}\nfunction getSequenceNumberFromByteArray(byteArray) {\n    const view = new DataView(byteArray);\n    return view.getUint32(0, /* littleEndian */ false);\n}\nfunction transact(callback, config) {\n    return __awaiter(this, void 0, void 0, function* () {\n        assertSecureContext();\n        const associationKeypair = yield generateAssociationKeypair();\n        const sessionPort = yield startSession(associationKeypair.publicKey, config === null || config === void 0 ? void 0 : config.baseUri);\n        const websocketURL = `ws://localhost:${sessionPort}/solana-wallet`;\n        let connectionStartTime;\n        const getNextRetryDelayMs = (() => {\n            const schedule = [...WEBSOCKET_CONNECTION_CONFIG.retryDelayScheduleMs];\n            return () => (schedule.length > 1 ? schedule.shift() : schedule[0]);\n        })();\n        let nextJsonRpcMessageId = 1;\n        let lastKnownInboundSequenceNumber = 0;\n        let state = { __type: 'disconnected' };\n        return new Promise((resolve, reject) => {\n            let socket;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const jsonRpcResponsePromises = {};\n            const handleOpen = () => __awaiter(this, void 0, void 0, function* () {\n                if (state.__type !== 'connecting') {\n                    console.warn('Expected adapter state to be `connecting` at the moment the websocket opens. ' +\n                        `Got \\`${state.__type}\\`.`);\n                    return;\n                }\n                const { associationKeypair } = state;\n                socket.removeEventListener('open', handleOpen);\n                const ecdhKeypair = yield generateECDHKeypair();\n                socket.send(yield createHelloReq(ecdhKeypair.publicKey, associationKeypair.privateKey));\n                state = {\n                    __type: 'hello_req_sent',\n                    associationPublicKey: associationKeypair.publicKey,\n                    ecdhPrivateKey: ecdhKeypair.privateKey,\n                };\n            });\n            const handleClose = (evt) => {\n                if (evt.wasClean) {\n                    state = { __type: 'disconnected' };\n                }\n                else {\n                    reject(new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_SESSION_CLOSED, `The wallet session dropped unexpectedly (${evt.code}: ${evt.reason}).`, { closeEvent: evt }));\n                }\n                disposeSocket();\n            };\n            const handleError = (_evt) => __awaiter(this, void 0, void 0, function* () {\n                disposeSocket();\n                if (Date.now() - connectionStartTime >= WEBSOCKET_CONNECTION_CONFIG.timeoutMs) {\n                    reject(new SolanaMobileWalletAdapterError(SolanaMobileWalletAdapterErrorCode.ERROR_SESSION_TIMEOUT, `Failed to connect to the wallet websocket on port ${sessionPort}.`));\n                }\n                else {\n                    yield new Promise((resolve) => {\n                        const retryDelayMs = getNextRetryDelayMs();\n                        retryWaitTimeoutId = window.setTimeout(resolve, retryDelayMs);\n                    });\n                    attemptSocketConnection();\n                }\n            });\n            const handleMessage = (evt) => __awaiter(this, void 0, void 0, function* () {\n                const responseBuffer = yield evt.data.arrayBuffer();\n                switch (state.__type) {\n                    case 'connected':\n                        try {\n                            const sequenceNumberVector = responseBuffer.slice(0, SEQUENCE_NUMBER_BYTES);\n                            const sequenceNumber = getSequenceNumberFromByteArray(sequenceNumberVector);\n                            if (sequenceNumber !== (lastKnownInboundSequenceNumber + 1)) {\n                                throw new Error('Encrypted message has invalid sequence number');\n                            }\n                            lastKnownInboundSequenceNumber = sequenceNumber;\n                            const jsonRpcMessage = yield decryptJsonRpcMessage(responseBuffer, state.sharedSecret);\n                            const responsePromise = jsonRpcResponsePromises[jsonRpcMessage.id];\n                            delete jsonRpcResponsePromises[jsonRpcMessage.id];\n                            responsePromise.resolve(jsonRpcMessage.result);\n                        }\n                        catch (e) {\n                            if (e instanceof SolanaMobileWalletAdapterProtocolError) {\n                                const responsePromise = jsonRpcResponsePromises[e.jsonRpcMessageId];\n                                delete jsonRpcResponsePromises[e.jsonRpcMessageId];\n                                responsePromise.reject(e);\n                            }\n                            else {\n                                throw e;\n                            }\n                        }\n                        break;\n                    case 'hello_req_sent': {\n                        const sharedSecret = yield parseHelloRsp(responseBuffer, state.associationPublicKey, state.ecdhPrivateKey);\n                        const sessionPropertiesBuffer = responseBuffer.slice(ENCODED_PUBLIC_KEY_LENGTH_BYTES);\n                        const sessionProperties = sessionPropertiesBuffer.byteLength !== 0\n                            ? yield (() => __awaiter(this, void 0, void 0, function* () {\n                                const sequenceNumberVector = sessionPropertiesBuffer.slice(0, SEQUENCE_NUMBER_BYTES);\n                                const sequenceNumber = getSequenceNumberFromByteArray(sequenceNumberVector);\n                                if (sequenceNumber !== (lastKnownInboundSequenceNumber + 1)) {\n                                    throw new Error('Encrypted message has invalid sequence number');\n                                }\n                                lastKnownInboundSequenceNumber = sequenceNumber;\n                                return parseSessionProps(sessionPropertiesBuffer, sharedSecret);\n                            }))() : { protocol_version: 'legacy' };\n                        state = { __type: 'connected', sharedSecret, sessionProperties };\n                        const wallet = createMobileWalletProxy(sessionProperties.protocol_version, (method, params) => __awaiter(this, void 0, void 0, function* () {\n                            const id = nextJsonRpcMessageId++;\n                            socket.send(yield encryptJsonRpcMessage({\n                                id,\n                                jsonrpc: '2.0',\n                                method,\n                                params: params !== null && params !== void 0 ? params : {},\n                            }, sharedSecret));\n                            return new Promise((resolve, reject) => {\n                                jsonRpcResponsePromises[id] = {\n                                    resolve(result) {\n                                        switch (method) {\n                                            case 'authorize':\n                                            case 'reauthorize': {\n                                                const { wallet_uri_base } = result;\n                                                if (wallet_uri_base != null) {\n                                                    try {\n                                                        assertSecureEndpointSpecificURI(wallet_uri_base);\n                                                    }\n                                                    catch (e) {\n                                                        reject(e);\n                                                        return;\n                                                    }\n                                                }\n                                                break;\n                                            }\n                                        }\n                                        resolve(result);\n                                    },\n                                    reject,\n                                };\n                            });\n                        }));\n                        try {\n                            resolve(yield callback(wallet));\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                        finally {\n                            disposeSocket();\n                            socket.close();\n                        }\n                        break;\n                    }\n                }\n            });\n            let disposeSocket;\n            let retryWaitTimeoutId;\n            const attemptSocketConnection = () => {\n                if (disposeSocket) {\n                    disposeSocket();\n                }\n                state = { __type: 'connecting', associationKeypair };\n                if (connectionStartTime === undefined) {\n                    connectionStartTime = Date.now();\n                }\n                socket = new WebSocket(websocketURL, [WEBSOCKET_PROTOCOL]);\n                socket.addEventListener('open', handleOpen);\n                socket.addEventListener('close', handleClose);\n                socket.addEventListener('error', handleError);\n                socket.addEventListener('message', handleMessage);\n                disposeSocket = () => {\n                    window.clearTimeout(retryWaitTimeoutId);\n                    socket.removeEventListener('open', handleOpen);\n                    socket.removeEventListener('close', handleClose);\n                    socket.removeEventListener('error', handleError);\n                    socket.removeEventListener('message', handleMessage);\n                };\n            };\n            attemptSocketConnection();\n        });\n    });\n}\n\nexport { SolanaCloneAuthorization, SolanaMobileWalletAdapterError, SolanaMobileWalletAdapterErrorCode, SolanaMobileWalletAdapterProtocolError, SolanaMobileWalletAdapterProtocolErrorCode, SolanaSignInWithSolana, SolanaSignTransactions, transact };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
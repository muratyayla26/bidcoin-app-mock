{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TrezorConnect = exports.CoreInPopup = void 0;\nconst tslib_1 = require(\"tslib\");\nconst events_1 = tslib_1.__importDefault(require(\"events\"));\nconst events_2 = require(\"@trezor/connect/lib/events\");\nconst ERRORS = tslib_1.__importStar(require(\"@trezor/connect/lib/constants/errors\"));\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst debug_1 = require(\"@trezor/connect/lib/utils/debug\");\nconst popup = tslib_1.__importStar(require(\"../popup\"));\nconst connectSettings_1 = require(\"../connectSettings\");\nclass CoreInPopup {\n  constructor() {\n    this.eventEmitter = new events_1.default();\n    this._settings = (0, connectSettings_1.parseConnectSettings)();\n    this.logger = (0, debug_1.initLog)('@trezor/connect-web');\n    this.popupManagerLogger = (0, debug_1.initLog)('@trezor/connect-web/popupManager');\n  }\n  logWriterFactory(popupManager) {\n    return {\n      add: message => {\n        popupManager.channel.postMessage({\n          event: events_2.UI_EVENT,\n          type: events_2.IFRAME.LOG,\n          payload: message\n        }, {\n          usePromise: false,\n          useQueue: true\n        });\n      }\n    };\n  }\n  manifest(data) {\n    this._settings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, this._settings), {\n      manifest: data\n    }));\n  }\n  dispose() {\n    this.eventEmitter.removeAllListeners();\n    this._settings = (0, connectSettings_1.parseConnectSettings)();\n    if (this._popupManager) {\n      this._popupManager.close();\n    }\n    return Promise.resolve(undefined);\n  }\n  cancel(error) {\n    if (this._popupManager) {\n      this._popupManager.emit(events_2.POPUP.CLOSED, error);\n    }\n  }\n  init(settings = {}) {\n    var _a, _b;\n    const oldSettings = (0, connectSettings_1.parseConnectSettings)(Object.assign({}, this._settings));\n    const newSettings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, this._settings), settings));\n    if (!((_a = newSettings.transports) === null || _a === void 0 ? void 0 : _a.length)) {\n      newSettings.transports = ['BridgeTransport', 'WebUsbTransport'];\n    }\n    newSettings.useCoreInPopup = true;\n    if (typeof window !== 'undefined' && ((_b = window === null || window === void 0 ? void 0 : window.location) === null || _b === void 0 ? void 0 : _b.origin)) {\n      newSettings.origin = window.location.origin;\n    }\n    const equalSettings = JSON.stringify(oldSettings) === JSON.stringify(newSettings);\n    this._settings = newSettings;\n    if (!this._popupManager || !equalSettings) {\n      if (this._popupManager) this._popupManager.close();\n      this._popupManager = new popup.PopupManager(this._settings, {\n        logger: this.popupManagerLogger\n      });\n      (0, debug_1.setLogWriter)(() => this.logWriterFactory(this._popupManager));\n    }\n    this.logger.enabled = !!settings.debug;\n    if (!this._settings.manifest) {\n      throw ERRORS.TypedError('Init_ManifestMissing');\n    }\n    this.logger.debug('initiated');\n    return Promise.resolve();\n  }\n  async call(params) {\n    var _a, _b;\n    this.logger.debug('call', params);\n    if (!this._popupManager) {\n      return (0, events_2.createErrorMessage)(ERRORS.TypedError('Init_NotInitialized'));\n    }\n    if (this._settings.popup) {\n      await this._popupManager.request();\n    }\n    try {\n      await this._popupManager.channel.init();\n      if (this._settings.env === 'webextension') {\n        await ((_a = this._popupManager.popupPromise) === null || _a === void 0 ? void 0 : _a.promise);\n        this._popupManager.channel.postMessage({\n          type: events_2.POPUP.INIT,\n          payload: {\n            settings: this._settings,\n            useCore: true\n          }\n        });\n      }\n      await ((_b = this._popupManager.handshakePromise) === null || _b === void 0 ? void 0 : _b.promise);\n      const response = await this._popupManager.channel.postMessage({\n        type: events_2.IFRAME.CALL,\n        payload: params\n      });\n      this.logger.debug('call: response: ', response);\n      if (response) {\n        if (this._popupManager && response.success) {\n          this._popupManager.clear();\n        }\n        return response;\n      }\n      return (0, events_2.createErrorMessage)(ERRORS.TypedError('Method_NoResponse'));\n    } catch (error) {\n      this.logger.error('call: error', error);\n      this._popupManager.clear(false);\n      return (0, events_2.createErrorMessage)(error);\n    }\n  }\n  uiResponse(response) {\n    var _a, _b;\n    const {\n      type,\n      payload\n    } = response;\n    (_b = (_a = this._popupManager) === null || _a === void 0 ? void 0 : _a.channel) === null || _b === void 0 ? void 0 : _b.postMessage({\n      event: events_2.UI_EVENT,\n      type,\n      payload\n    });\n  }\n  renderWebUSBButton() {}\n  requestLogin() {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n  disableWebUSB() {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n  requestWebUSBDevice() {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n}\nexports.CoreInPopup = CoreInPopup;\nconst impl = new CoreInPopup();\nexports.TrezorConnect = (0, factory_1.factory)({\n  eventEmitter: impl.eventEmitter,\n  init: impl.init.bind(impl),\n  call: impl.call.bind(impl),\n  manifest: impl.manifest.bind(impl),\n  requestLogin: impl.requestLogin.bind(impl),\n  uiResponse: impl.uiResponse.bind(impl),\n  renderWebUSBButton: impl.renderWebUSBButton.bind(impl),\n  disableWebUSB: impl.disableWebUSB.bind(impl),\n  requestWebUSBDevice: impl.requestWebUSBDevice.bind(impl),\n  cancel: impl.cancel.bind(impl),\n  dispose: impl.dispose.bind(impl)\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","TrezorConnect","CoreInPopup","tslib_1","require","events_1","__importDefault","events_2","ERRORS","__importStar","factory_1","debug_1","popup","connectSettings_1","constructor","eventEmitter","default","_settings","parseConnectSettings","logger","initLog","popupManagerLogger","logWriterFactory","popupManager","add","message","channel","postMessage","event","UI_EVENT","type","IFRAME","LOG","payload","usePromise","useQueue","manifest","data","assign","dispose","removeAllListeners","_popupManager","close","Promise","resolve","undefined","cancel","error","emit","POPUP","CLOSED","init","settings","_a","_b","oldSettings","newSettings","transports","length","useCoreInPopup","window","location","origin","equalSettings","JSON","stringify","PopupManager","setLogWriter","enabled","debug","TypedError","call","params","createErrorMessage","request","env","popupPromise","promise","INIT","useCore","handshakePromise","response","CALL","success","clear","uiResponse","renderWebUSBButton","requestLogin","disableWebUSB","requestWebUSBDevice","impl","factory","bind"],"sources":["C:/Users/Administrator/solana-wallet-app/node_modules/@trezor/connect-web/lib/impl/core-in-popup.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrezorConnect = exports.CoreInPopup = void 0;\nconst tslib_1 = require(\"tslib\");\nconst events_1 = tslib_1.__importDefault(require(\"events\"));\nconst events_2 = require(\"@trezor/connect/lib/events\");\nconst ERRORS = tslib_1.__importStar(require(\"@trezor/connect/lib/constants/errors\"));\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst debug_1 = require(\"@trezor/connect/lib/utils/debug\");\nconst popup = tslib_1.__importStar(require(\"../popup\"));\nconst connectSettings_1 = require(\"../connectSettings\");\nclass CoreInPopup {\n    constructor() {\n        this.eventEmitter = new events_1.default();\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n        this.logger = (0, debug_1.initLog)('@trezor/connect-web');\n        this.popupManagerLogger = (0, debug_1.initLog)('@trezor/connect-web/popupManager');\n    }\n    logWriterFactory(popupManager) {\n        return {\n            add: (message) => {\n                popupManager.channel.postMessage({\n                    event: events_2.UI_EVENT,\n                    type: events_2.IFRAME.LOG,\n                    payload: message,\n                }, { usePromise: false, useQueue: true });\n            },\n        };\n    }\n    manifest(data) {\n        this._settings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, this._settings), { manifest: data }));\n    }\n    dispose() {\n        this.eventEmitter.removeAllListeners();\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n        if (this._popupManager) {\n            this._popupManager.close();\n        }\n        return Promise.resolve(undefined);\n    }\n    cancel(error) {\n        if (this._popupManager) {\n            this._popupManager.emit(events_2.POPUP.CLOSED, error);\n        }\n    }\n    init(settings = {}) {\n        var _a, _b;\n        const oldSettings = (0, connectSettings_1.parseConnectSettings)(Object.assign({}, this._settings));\n        const newSettings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, this._settings), settings));\n        if (!((_a = newSettings.transports) === null || _a === void 0 ? void 0 : _a.length)) {\n            newSettings.transports = ['BridgeTransport', 'WebUsbTransport'];\n        }\n        newSettings.useCoreInPopup = true;\n        if (typeof window !== 'undefined' && ((_b = window === null || window === void 0 ? void 0 : window.location) === null || _b === void 0 ? void 0 : _b.origin)) {\n            newSettings.origin = window.location.origin;\n        }\n        const equalSettings = JSON.stringify(oldSettings) === JSON.stringify(newSettings);\n        this._settings = newSettings;\n        if (!this._popupManager || !equalSettings) {\n            if (this._popupManager)\n                this._popupManager.close();\n            this._popupManager = new popup.PopupManager(this._settings, {\n                logger: this.popupManagerLogger,\n            });\n            (0, debug_1.setLogWriter)(() => this.logWriterFactory(this._popupManager));\n        }\n        this.logger.enabled = !!settings.debug;\n        if (!this._settings.manifest) {\n            throw ERRORS.TypedError('Init_ManifestMissing');\n        }\n        this.logger.debug('initiated');\n        return Promise.resolve();\n    }\n    async call(params) {\n        var _a, _b;\n        this.logger.debug('call', params);\n        if (!this._popupManager) {\n            return (0, events_2.createErrorMessage)(ERRORS.TypedError('Init_NotInitialized'));\n        }\n        if (this._settings.popup) {\n            await this._popupManager.request();\n        }\n        try {\n            await this._popupManager.channel.init();\n            if (this._settings.env === 'webextension') {\n                await ((_a = this._popupManager.popupPromise) === null || _a === void 0 ? void 0 : _a.promise);\n                this._popupManager.channel.postMessage({\n                    type: events_2.POPUP.INIT,\n                    payload: {\n                        settings: this._settings,\n                        useCore: true,\n                    },\n                });\n            }\n            await ((_b = this._popupManager.handshakePromise) === null || _b === void 0 ? void 0 : _b.promise);\n            const response = await this._popupManager.channel.postMessage({\n                type: events_2.IFRAME.CALL,\n                payload: params,\n            });\n            this.logger.debug('call: response: ', response);\n            if (response) {\n                if (this._popupManager && response.success) {\n                    this._popupManager.clear();\n                }\n                return response;\n            }\n            return (0, events_2.createErrorMessage)(ERRORS.TypedError('Method_NoResponse'));\n        }\n        catch (error) {\n            this.logger.error('call: error', error);\n            this._popupManager.clear(false);\n            return (0, events_2.createErrorMessage)(error);\n        }\n    }\n    uiResponse(response) {\n        var _a, _b;\n        const { type, payload } = response;\n        (_b = (_a = this._popupManager) === null || _a === void 0 ? void 0 : _a.channel) === null || _b === void 0 ? void 0 : _b.postMessage({ event: events_2.UI_EVENT, type, payload });\n    }\n    renderWebUSBButton() { }\n    requestLogin() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    disableWebUSB() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    requestWebUSBDevice() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n}\nexports.CoreInPopup = CoreInPopup;\nconst impl = new CoreInPopup();\nexports.TrezorConnect = (0, factory_1.factory)({\n    eventEmitter: impl.eventEmitter,\n    init: impl.init.bind(impl),\n    call: impl.call.bind(impl),\n    manifest: impl.manifest.bind(impl),\n    requestLogin: impl.requestLogin.bind(impl),\n    uiResponse: impl.uiResponse.bind(impl),\n    renderWebUSBButton: impl.renderWebUSBButton.bind(impl),\n    disableWebUSB: impl.disableWebUSB.bind(impl),\n    requestWebUSBDevice: impl.requestWebUSBDevice.bind(impl),\n    cancel: impl.cancel.bind(impl),\n    dispose: impl.dispose.bind(impl),\n});\n//# sourceMappingURL=core-in-popup.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAGF,OAAO,CAACG,WAAW,GAAG,KAAK,CAAC;AACpD,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAO,CAAC;AAChC,MAAMC,QAAQ,GAAGF,OAAO,CAACG,eAAe,CAACF,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC3D,MAAMG,QAAQ,GAAGH,OAAO,CAAC,4BAA4B,CAAC;AACtD,MAAMI,MAAM,GAAGL,OAAO,CAACM,YAAY,CAACL,OAAO,CAAC,sCAAsC,CAAC,CAAC;AACpF,MAAMM,SAAS,GAAGN,OAAO,CAAC,6BAA6B,CAAC;AACxD,MAAMO,OAAO,GAAGP,OAAO,CAAC,iCAAiC,CAAC;AAC1D,MAAMQ,KAAK,GAAGT,OAAO,CAACM,YAAY,CAACL,OAAO,CAAC,UAAU,CAAC,CAAC;AACvD,MAAMS,iBAAiB,GAAGT,OAAO,CAAC,oBAAoB,CAAC;AACvD,MAAMF,WAAW,CAAC;EACdY,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,YAAY,GAAG,IAAIV,QAAQ,CAACW,OAAO,CAAC,CAAC;IAC1C,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC,EAAEJ,iBAAiB,CAACK,oBAAoB,EAAE,CAAC;IAC9D,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC,EAAER,OAAO,CAACS,OAAO,EAAE,qBAAqB,CAAC;IACzD,IAAI,CAACC,kBAAkB,GAAG,CAAC,CAAC,EAAEV,OAAO,CAACS,OAAO,EAAE,kCAAkC,CAAC;EACtF;EACAE,gBAAgBA,CAACC,YAAY,EAAE;IAC3B,OAAO;MACHC,GAAG,EAAGC,OAAO,IAAK;QACdF,YAAY,CAACG,OAAO,CAACC,WAAW,CAAC;UAC7BC,KAAK,EAAErB,QAAQ,CAACsB,QAAQ;UACxBC,IAAI,EAAEvB,QAAQ,CAACwB,MAAM,CAACC,GAAG;UACzBC,OAAO,EAAER;QACb,CAAC,EAAE;UAAES,UAAU,EAAE,KAAK;UAAEC,QAAQ,EAAE;QAAK,CAAC,CAAC;MAC7C;IACJ,CAAC;EACL;EACAC,QAAQA,CAACC,IAAI,EAAE;IACX,IAAI,CAACpB,SAAS,GAAG,CAAC,CAAC,EAAEJ,iBAAiB,CAACK,oBAAoB,EAAErB,MAAM,CAACyC,MAAM,CAACzC,MAAM,CAACyC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACrB,SAAS,CAAC,EAAE;MAAEmB,QAAQ,EAAEC;IAAK,CAAC,CAAC,CAAC;EACtI;EACAE,OAAOA,CAAA,EAAG;IACN,IAAI,CAACxB,YAAY,CAACyB,kBAAkB,CAAC,CAAC;IACtC,IAAI,CAACvB,SAAS,GAAG,CAAC,CAAC,EAAEJ,iBAAiB,CAACK,oBAAoB,EAAE,CAAC;IAC9D,IAAI,IAAI,CAACuB,aAAa,EAAE;MACpB,IAAI,CAACA,aAAa,CAACC,KAAK,CAAC,CAAC;IAC9B;IACA,OAAOC,OAAO,CAACC,OAAO,CAACC,SAAS,CAAC;EACrC;EACAC,MAAMA,CAACC,KAAK,EAAE;IACV,IAAI,IAAI,CAACN,aAAa,EAAE;MACpB,IAAI,CAACA,aAAa,CAACO,IAAI,CAACzC,QAAQ,CAAC0C,KAAK,CAACC,MAAM,EAAEH,KAAK,CAAC;IACzD;EACJ;EACAI,IAAIA,CAACC,QAAQ,GAAG,CAAC,CAAC,EAAE;IAChB,IAAIC,EAAE,EAAEC,EAAE;IACV,MAAMC,WAAW,GAAG,CAAC,CAAC,EAAE1C,iBAAiB,CAACK,oBAAoB,EAAErB,MAAM,CAACyC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACrB,SAAS,CAAC,CAAC;IAClG,MAAMuC,WAAW,GAAG,CAAC,CAAC,EAAE3C,iBAAiB,CAACK,oBAAoB,EAAErB,MAAM,CAACyC,MAAM,CAACzC,MAAM,CAACyC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACrB,SAAS,CAAC,EAAEmC,QAAQ,CAAC,CAAC;IAC3H,IAAI,EAAE,CAACC,EAAE,GAAGG,WAAW,CAACC,UAAU,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACK,MAAM,CAAC,EAAE;MACjFF,WAAW,CAACC,UAAU,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC;IACnE;IACAD,WAAW,CAACG,cAAc,GAAG,IAAI;IACjC,IAAI,OAAOC,MAAM,KAAK,WAAW,KAAK,CAACN,EAAE,GAAGM,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACC,QAAQ,MAAM,IAAI,IAAIP,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACQ,MAAM,CAAC,EAAE;MAC1JN,WAAW,CAACM,MAAM,GAAGF,MAAM,CAACC,QAAQ,CAACC,MAAM;IAC/C;IACA,MAAMC,aAAa,GAAGC,IAAI,CAACC,SAAS,CAACV,WAAW,CAAC,KAAKS,IAAI,CAACC,SAAS,CAACT,WAAW,CAAC;IACjF,IAAI,CAACvC,SAAS,GAAGuC,WAAW;IAC5B,IAAI,CAAC,IAAI,CAACf,aAAa,IAAI,CAACsB,aAAa,EAAE;MACvC,IAAI,IAAI,CAACtB,aAAa,EAClB,IAAI,CAACA,aAAa,CAACC,KAAK,CAAC,CAAC;MAC9B,IAAI,CAACD,aAAa,GAAG,IAAI7B,KAAK,CAACsD,YAAY,CAAC,IAAI,CAACjD,SAAS,EAAE;QACxDE,MAAM,EAAE,IAAI,CAACE;MACjB,CAAC,CAAC;MACF,CAAC,CAAC,EAAEV,OAAO,CAACwD,YAAY,EAAE,MAAM,IAAI,CAAC7C,gBAAgB,CAAC,IAAI,CAACmB,aAAa,CAAC,CAAC;IAC9E;IACA,IAAI,CAACtB,MAAM,CAACiD,OAAO,GAAG,CAAC,CAAChB,QAAQ,CAACiB,KAAK;IACtC,IAAI,CAAC,IAAI,CAACpD,SAAS,CAACmB,QAAQ,EAAE;MAC1B,MAAM5B,MAAM,CAAC8D,UAAU,CAAC,sBAAsB,CAAC;IACnD;IACA,IAAI,CAACnD,MAAM,CAACkD,KAAK,CAAC,WAAW,CAAC;IAC9B,OAAO1B,OAAO,CAACC,OAAO,CAAC,CAAC;EAC5B;EACA,MAAM2B,IAAIA,CAACC,MAAM,EAAE;IACf,IAAInB,EAAE,EAAEC,EAAE;IACV,IAAI,CAACnC,MAAM,CAACkD,KAAK,CAAC,MAAM,EAAEG,MAAM,CAAC;IACjC,IAAI,CAAC,IAAI,CAAC/B,aAAa,EAAE;MACrB,OAAO,CAAC,CAAC,EAAElC,QAAQ,CAACkE,kBAAkB,EAAEjE,MAAM,CAAC8D,UAAU,CAAC,qBAAqB,CAAC,CAAC;IACrF;IACA,IAAI,IAAI,CAACrD,SAAS,CAACL,KAAK,EAAE;MACtB,MAAM,IAAI,CAAC6B,aAAa,CAACiC,OAAO,CAAC,CAAC;IACtC;IACA,IAAI;MACA,MAAM,IAAI,CAACjC,aAAa,CAACf,OAAO,CAACyB,IAAI,CAAC,CAAC;MACvC,IAAI,IAAI,CAAClC,SAAS,CAAC0D,GAAG,KAAK,cAAc,EAAE;QACvC,OAAO,CAACtB,EAAE,GAAG,IAAI,CAACZ,aAAa,CAACmC,YAAY,MAAM,IAAI,IAAIvB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACwB,OAAO,CAAC;QAC9F,IAAI,CAACpC,aAAa,CAACf,OAAO,CAACC,WAAW,CAAC;UACnCG,IAAI,EAAEvB,QAAQ,CAAC0C,KAAK,CAAC6B,IAAI;UACzB7C,OAAO,EAAE;YACLmB,QAAQ,EAAE,IAAI,CAACnC,SAAS;YACxB8D,OAAO,EAAE;UACb;QACJ,CAAC,CAAC;MACN;MACA,OAAO,CAACzB,EAAE,GAAG,IAAI,CAACb,aAAa,CAACuC,gBAAgB,MAAM,IAAI,IAAI1B,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACuB,OAAO,CAAC;MAClG,MAAMI,QAAQ,GAAG,MAAM,IAAI,CAACxC,aAAa,CAACf,OAAO,CAACC,WAAW,CAAC;QAC1DG,IAAI,EAAEvB,QAAQ,CAACwB,MAAM,CAACmD,IAAI;QAC1BjD,OAAO,EAAEuC;MACb,CAAC,CAAC;MACF,IAAI,CAACrD,MAAM,CAACkD,KAAK,CAAC,kBAAkB,EAAEY,QAAQ,CAAC;MAC/C,IAAIA,QAAQ,EAAE;QACV,IAAI,IAAI,CAACxC,aAAa,IAAIwC,QAAQ,CAACE,OAAO,EAAE;UACxC,IAAI,CAAC1C,aAAa,CAAC2C,KAAK,CAAC,CAAC;QAC9B;QACA,OAAOH,QAAQ;MACnB;MACA,OAAO,CAAC,CAAC,EAAE1E,QAAQ,CAACkE,kBAAkB,EAAEjE,MAAM,CAAC8D,UAAU,CAAC,mBAAmB,CAAC,CAAC;IACnF,CAAC,CACD,OAAOvB,KAAK,EAAE;MACV,IAAI,CAAC5B,MAAM,CAAC4B,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;MACvC,IAAI,CAACN,aAAa,CAAC2C,KAAK,CAAC,KAAK,CAAC;MAC/B,OAAO,CAAC,CAAC,EAAE7E,QAAQ,CAACkE,kBAAkB,EAAE1B,KAAK,CAAC;IAClD;EACJ;EACAsC,UAAUA,CAACJ,QAAQ,EAAE;IACjB,IAAI5B,EAAE,EAAEC,EAAE;IACV,MAAM;MAAExB,IAAI;MAAEG;IAAQ,CAAC,GAAGgD,QAAQ;IAClC,CAAC3B,EAAE,GAAG,CAACD,EAAE,GAAG,IAAI,CAACZ,aAAa,MAAM,IAAI,IAAIY,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC3B,OAAO,MAAM,IAAI,IAAI4B,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC3B,WAAW,CAAC;MAAEC,KAAK,EAAErB,QAAQ,CAACsB,QAAQ;MAAEC,IAAI;MAAEG;IAAQ,CAAC,CAAC;EACrL;EACAqD,kBAAkBA,CAAA,EAAG,CAAE;EACvBC,YAAYA,CAAA,EAAG;IACX,MAAM/E,MAAM,CAAC8D,UAAU,CAAC,uBAAuB,CAAC;EACpD;EACAkB,aAAaA,CAAA,EAAG;IACZ,MAAMhF,MAAM,CAAC8D,UAAU,CAAC,uBAAuB,CAAC;EACpD;EACAmB,mBAAmBA,CAAA,EAAG;IAClB,MAAMjF,MAAM,CAAC8D,UAAU,CAAC,uBAAuB,CAAC;EACpD;AACJ;AACAvE,OAAO,CAACG,WAAW,GAAGA,WAAW;AACjC,MAAMwF,IAAI,GAAG,IAAIxF,WAAW,CAAC,CAAC;AAC9BH,OAAO,CAACE,aAAa,GAAG,CAAC,CAAC,EAAES,SAAS,CAACiF,OAAO,EAAE;EAC3C5E,YAAY,EAAE2E,IAAI,CAAC3E,YAAY;EAC/BoC,IAAI,EAAEuC,IAAI,CAACvC,IAAI,CAACyC,IAAI,CAACF,IAAI,CAAC;EAC1BnB,IAAI,EAAEmB,IAAI,CAACnB,IAAI,CAACqB,IAAI,CAACF,IAAI,CAAC;EAC1BtD,QAAQ,EAAEsD,IAAI,CAACtD,QAAQ,CAACwD,IAAI,CAACF,IAAI,CAAC;EAClCH,YAAY,EAAEG,IAAI,CAACH,YAAY,CAACK,IAAI,CAACF,IAAI,CAAC;EAC1CL,UAAU,EAAEK,IAAI,CAACL,UAAU,CAACO,IAAI,CAACF,IAAI,CAAC;EACtCJ,kBAAkB,EAAEI,IAAI,CAACJ,kBAAkB,CAACM,IAAI,CAACF,IAAI,CAAC;EACtDF,aAAa,EAAEE,IAAI,CAACF,aAAa,CAACI,IAAI,CAACF,IAAI,CAAC;EAC5CD,mBAAmB,EAAEC,IAAI,CAACD,mBAAmB,CAACG,IAAI,CAACF,IAAI,CAAC;EACxD5C,MAAM,EAAE4C,IAAI,CAAC5C,MAAM,CAAC8C,IAAI,CAACF,IAAI,CAAC;EAC9BnD,OAAO,EAAEmD,IAAI,CAACnD,OAAO,CAACqD,IAAI,CAACF,IAAI;AACnC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
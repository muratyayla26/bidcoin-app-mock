{"ast":null,"code":"import bases from './util/bases.js';\nexport function fromString(string) {\n  let encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf8';\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(string, 'utf8');\n  }\n  return base.decoder.decode(`${base.prefix}${string}`);\n}","map":{"version":3,"names":["bases","fromString","string","encoding","arguments","length","undefined","base","Error","globalThis","Buffer","from","decoder","decode","prefix"],"sources":["C:/Users/Administrator/solana-wallet-app/node_modules/uint8arrays/esm/src/from-string.js"],"sourcesContent":["import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(string, 'utf8');\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AACnC,OAAO,SAASC,UAAUA,CAACC,MAAM,EAAqB;EAAA,IAAnBC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,MAAM;EAClD,MAAMG,IAAI,GAAGP,KAAK,CAACG,QAAQ,CAAC;EAC5B,IAAI,CAACI,IAAI,EAAE;IACT,MAAM,IAAIC,KAAK,CAAC,yBAA0BL,QAAQ,GAAI,CAAC;EACzD;EACA,IAAI,CAACA,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,OAAO,KAAKM,UAAU,CAACC,MAAM,IAAI,IAAI,IAAID,UAAU,CAACC,MAAM,CAACC,IAAI,IAAI,IAAI,EAAE;IAChH,OAAOF,UAAU,CAACC,MAAM,CAACC,IAAI,CAACT,MAAM,EAAE,MAAM,CAAC;EAC/C;EACA,OAAOK,IAAI,CAACK,OAAO,CAACC,MAAM,CAAC,GAAIN,IAAI,CAACO,MAAM,GAAKZ,MAAM,EAAG,CAAC;AAC3D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
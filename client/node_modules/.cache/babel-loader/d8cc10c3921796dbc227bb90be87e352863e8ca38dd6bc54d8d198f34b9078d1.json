{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TrezorConnect = exports.CoreInIframe = void 0;\nconst tslib_1 = require(\"tslib\");\nconst events_1 = tslib_1.__importDefault(require(\"events\"));\nconst ERRORS = tslib_1.__importStar(require(\"@trezor/connect/lib/constants/errors\"));\nconst events_2 = require(\"@trezor/connect/lib/events\");\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst debug_1 = require(\"@trezor/connect/lib/utils/debug\");\nconst config_1 = require(\"@trezor/connect/lib/data/config\");\nconst createDeferredManager_1 = require(\"@trezor/utils/lib/createDeferredManager\");\nconst iframe = tslib_1.__importStar(require(\"../iframe\"));\nconst popup = tslib_1.__importStar(require(\"../popup\"));\nconst button_1 = tslib_1.__importDefault(require(\"../webusb/button\"));\nconst connectSettings_1 = require(\"../connectSettings\");\nclass CoreInIframe {\n  constructor() {\n    this.eventEmitter = new events_1.default();\n    this.boundHandleMessage = this.handleMessage.bind(this);\n    this.boundDispose = this.dispose.bind(this);\n    this._settings = (0, connectSettings_1.parseConnectSettings)();\n    this._log = (0, debug_1.initLog)('@trezor/connect-web');\n    this._messagePromises = (0, createDeferredManager_1.createDeferredManager)({\n      initialId: 1\n    });\n  }\n  initPopupManager() {\n    const pm = new popup.PopupManager(this._settings, {\n      logger: this._log\n    });\n    pm.on(events_2.POPUP.CLOSED, error => {\n      iframe.postMessage({\n        type: events_2.POPUP.CLOSED,\n        payload: error ? {\n          error\n        } : null\n      });\n    });\n    return pm;\n  }\n  manifest(data) {\n    this._settings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, this._settings), {\n      manifest: data\n    }));\n  }\n  dispose() {\n    this.eventEmitter.removeAllListeners();\n    iframe.dispose();\n    this._settings = (0, connectSettings_1.parseConnectSettings)();\n    if (this._popupManager) {\n      this._popupManager.close();\n    }\n    window.removeEventListener('message', this.boundHandleMessage);\n    window.removeEventListener('unload', this.boundDispose);\n    return Promise.resolve(undefined);\n  }\n  cancel(error) {\n    if (this._popupManager) {\n      this._popupManager.emit(events_2.POPUP.CLOSED, error);\n    }\n  }\n  handleMessage(messageEvent) {\n    if (messageEvent.origin !== iframe.origin) return;\n    const message = (0, events_2.parseMessage)(messageEvent.data);\n    this._log.log('handleMessage', message);\n    switch (message.event) {\n      case events_2.RESPONSE_EVENT:\n        {\n          const {\n            id = 0,\n            success,\n            payload\n          } = message;\n          const resolved = this._messagePromises.resolve(id, {\n            id,\n            success,\n            payload\n          });\n          if (!resolved) this._log.warn(`Unknown message id ${id}`);\n          break;\n        }\n      case events_2.DEVICE_EVENT:\n        this.eventEmitter.emit(message.event, message);\n        this.eventEmitter.emit(message.type, message.payload);\n        break;\n      case events_2.TRANSPORT_EVENT:\n        this.eventEmitter.emit(message.event, message);\n        this.eventEmitter.emit(message.type, message.payload);\n        break;\n      case events_2.BLOCKCHAIN_EVENT:\n        this.eventEmitter.emit(message.event, message);\n        this.eventEmitter.emit(message.type, message.payload);\n        break;\n      case events_2.UI_EVENT:\n        if (message.type === events_2.IFRAME.BOOTSTRAP) {\n          iframe.clearTimeout();\n          break;\n        }\n        if (message.type === events_2.IFRAME.LOADED) {\n          iframe.initPromise.resolve();\n        }\n        if (message.type === events_2.IFRAME.ERROR) {\n          iframe.initPromise.reject(message.payload.error);\n        }\n        this.eventEmitter.emit(message.event, message);\n        this.eventEmitter.emit(message.type, message.payload);\n        break;\n      default:\n        this._log.log('Undefined message', messageEvent.data);\n    }\n  }\n  async init(settings = {}) {\n    var _a, _b;\n    if (iframe.instance) {\n      throw ERRORS.TypedError('Init_AlreadyInitialized');\n    }\n    this._settings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, this._settings), settings));\n    if (!this._settings.manifest) {\n      throw ERRORS.TypedError('Init_ManifestMissing');\n    }\n    if (!((_a = this._settings.transports) === null || _a === void 0 ? void 0 : _a.length)) {\n      this._settings.transports = ['BridgeTransport', 'WebUsbTransport'];\n    }\n    if (this._settings.lazyLoad) {\n      this._settings.lazyLoad = false;\n      return;\n    }\n    if (!this._popupManager) {\n      this._popupManager = this.initPopupManager();\n    }\n    this._log.enabled = !!this._settings.debug;\n    window.addEventListener('message', this.boundHandleMessage);\n    window.addEventListener('unload', this.boundDispose);\n    await iframe.init(this._settings);\n    if (this._settings.coreMode === 'auto') {\n      const {\n        promiseId,\n        promise\n      } = this._messagePromises.create();\n      this._log.debug('coreMode = auto, Checking bridge availability');\n      iframe.postMessage({\n        id: promiseId,\n        type: events_2.TRANSPORT.GET_INFO\n      });\n      const response = await promise;\n      this._log.debug('Bridge availability response', response);\n      if (response.payload === undefined && navigator.usb && ((_b = this._settings.transports) === null || _b === void 0 ? void 0 : _b.includes('WebUsbTransport'))) {\n        throw ERRORS.TypedError('Transport_Missing');\n      }\n    }\n    if (this._settings.sharedLogger !== false) {\n      iframe.initIframeLogger();\n    }\n  }\n  async call(params) {\n    if (!iframe.instance && !iframe.timeout) {\n      this._settings = (0, connectSettings_1.parseConnectSettings)(this._settings);\n      if (!this._settings.manifest) {\n        return (0, events_2.createErrorMessage)(ERRORS.TypedError('Init_ManifestMissing'));\n      }\n      if (!this._popupManager) {\n        this._popupManager = this.initPopupManager();\n      }\n      try {\n        await this.init(this._settings);\n      } catch (error) {\n        if (this._popupManager) {\n          this._popupManager.clear();\n        }\n        return (0, events_2.createErrorMessage)(error);\n      }\n    }\n    if (iframe.timeout) {\n      await iframe.initPromise.promise;\n    }\n    if (iframe.error) {\n      return (0, events_2.createErrorMessage)(iframe.error);\n    }\n    if (this._settings.popup && this._popupManager) {\n      this._popupManager.request();\n    }\n    try {\n      const {\n        promiseId,\n        promise\n      } = this._messagePromises.create();\n      iframe.postMessage({\n        id: promiseId,\n        type: events_2.IFRAME.CALL,\n        payload: params\n      });\n      const response = await promise;\n      if (response) {\n        if (!response.success && response.payload.code !== 'Device_CallInProgress' && this._popupManager) {\n          this._popupManager.unlock();\n        }\n        return response;\n      }\n      if (this._popupManager) {\n        this._popupManager.unlock();\n      }\n      return (0, events_2.createErrorMessage)(ERRORS.TypedError('Method_NoResponse'));\n    } catch (error) {\n      this._log.error('__call error', error);\n      if (this._popupManager) {\n        this._popupManager.clear(false);\n      }\n      return (0, events_2.createErrorMessage)(error);\n    }\n  }\n  uiResponse(response) {\n    if (!iframe.instance) {\n      throw ERRORS.TypedError('Init_NotInitialized');\n    }\n    iframe.postMessage(response);\n  }\n  renderWebUSBButton(className) {\n    (0, button_1.default)(className, this._settings.webusbSrc);\n  }\n  async requestLogin(params) {\n    if (typeof params.callback === 'function') {\n      const {\n        callback\n      } = params;\n      const loginChallengeListener = async event => {\n        const {\n          data\n        } = event;\n        if (data && data.type === events_2.UI.LOGIN_CHALLENGE_REQUEST) {\n          try {\n            const payload = await callback();\n            iframe.postMessage({\n              type: events_2.UI.LOGIN_CHALLENGE_RESPONSE,\n              payload\n            });\n          } catch (error) {\n            iframe.postMessage({\n              type: events_2.UI.LOGIN_CHALLENGE_RESPONSE,\n              payload: error.message\n            });\n          }\n        }\n      };\n      window.addEventListener('message', loginChallengeListener, false);\n      const response = await this.call(Object.assign(Object.assign({\n        method: 'requestLogin'\n      }, params), {\n        asyncChallenge: true,\n        callback: null\n      }));\n      window.removeEventListener('message', loginChallengeListener);\n      return response;\n    }\n    return this.call(Object.assign({\n      method: 'requestLogin'\n    }, params));\n  }\n  disableWebUSB() {\n    if (!iframe.instance) {\n      throw ERRORS.TypedError('Init_NotInitialized');\n    }\n    iframe.postMessage({\n      type: events_2.TRANSPORT.DISABLE_WEBUSB\n    });\n  }\n  async requestWebUSBDevice() {\n    try {\n      await window.navigator.usb.requestDevice({\n        filters: config_1.config.webusb\n      });\n      iframe.postMessage({\n        type: events_2.TRANSPORT.REQUEST_DEVICE\n      });\n    } catch (_err) {}\n  }\n}\nexports.CoreInIframe = CoreInIframe;\nconst impl = new CoreInIframe();\nexports.TrezorConnect = (0, factory_1.factory)({\n  eventEmitter: impl.eventEmitter,\n  init: impl.init.bind(impl),\n  call: impl.call.bind(impl),\n  manifest: impl.manifest.bind(impl),\n  requestLogin: impl.requestLogin.bind(impl),\n  uiResponse: impl.uiResponse.bind(impl),\n  renderWebUSBButton: impl.renderWebUSBButton.bind(impl),\n  disableWebUSB: impl.disableWebUSB.bind(impl),\n  requestWebUSBDevice: impl.requestWebUSBDevice.bind(impl),\n  cancel: impl.cancel.bind(impl),\n  dispose: impl.dispose.bind(impl)\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","TrezorConnect","CoreInIframe","tslib_1","require","events_1","__importDefault","ERRORS","__importStar","events_2","factory_1","debug_1","config_1","createDeferredManager_1","iframe","popup","button_1","connectSettings_1","constructor","eventEmitter","default","boundHandleMessage","handleMessage","bind","boundDispose","dispose","_settings","parseConnectSettings","_log","initLog","_messagePromises","createDeferredManager","initialId","initPopupManager","pm","PopupManager","logger","on","POPUP","CLOSED","error","postMessage","type","payload","manifest","data","assign","removeAllListeners","_popupManager","close","window","removeEventListener","Promise","resolve","undefined","cancel","emit","messageEvent","origin","message","parseMessage","log","event","RESPONSE_EVENT","id","success","resolved","warn","DEVICE_EVENT","TRANSPORT_EVENT","BLOCKCHAIN_EVENT","UI_EVENT","IFRAME","BOOTSTRAP","clearTimeout","LOADED","initPromise","ERROR","reject","init","settings","_a","_b","instance","TypedError","transports","length","lazyLoad","enabled","debug","addEventListener","coreMode","promiseId","promise","create","TRANSPORT","GET_INFO","response","navigator","usb","includes","sharedLogger","initIframeLogger","call","params","timeout","createErrorMessage","clear","request","CALL","code","unlock","uiResponse","renderWebUSBButton","className","webusbSrc","requestLogin","callback","loginChallengeListener","UI","LOGIN_CHALLENGE_REQUEST","LOGIN_CHALLENGE_RESPONSE","method","asyncChallenge","disableWebUSB","DISABLE_WEBUSB","requestWebUSBDevice","requestDevice","filters","config","webusb","REQUEST_DEVICE","_err","impl","factory"],"sources":["C:/Users/Administrator/solana-wallet-app/node_modules/@trezor/connect-web/lib/impl/core-in-iframe.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrezorConnect = exports.CoreInIframe = void 0;\nconst tslib_1 = require(\"tslib\");\nconst events_1 = tslib_1.__importDefault(require(\"events\"));\nconst ERRORS = tslib_1.__importStar(require(\"@trezor/connect/lib/constants/errors\"));\nconst events_2 = require(\"@trezor/connect/lib/events\");\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst debug_1 = require(\"@trezor/connect/lib/utils/debug\");\nconst config_1 = require(\"@trezor/connect/lib/data/config\");\nconst createDeferredManager_1 = require(\"@trezor/utils/lib/createDeferredManager\");\nconst iframe = tslib_1.__importStar(require(\"../iframe\"));\nconst popup = tslib_1.__importStar(require(\"../popup\"));\nconst button_1 = tslib_1.__importDefault(require(\"../webusb/button\"));\nconst connectSettings_1 = require(\"../connectSettings\");\nclass CoreInIframe {\n    constructor() {\n        this.eventEmitter = new events_1.default();\n        this.boundHandleMessage = this.handleMessage.bind(this);\n        this.boundDispose = this.dispose.bind(this);\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n        this._log = (0, debug_1.initLog)('@trezor/connect-web');\n        this._messagePromises = (0, createDeferredManager_1.createDeferredManager)({ initialId: 1 });\n    }\n    initPopupManager() {\n        const pm = new popup.PopupManager(this._settings, { logger: this._log });\n        pm.on(events_2.POPUP.CLOSED, (error) => {\n            iframe.postMessage({\n                type: events_2.POPUP.CLOSED,\n                payload: error ? { error } : null,\n            });\n        });\n        return pm;\n    }\n    manifest(data) {\n        this._settings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, this._settings), { manifest: data }));\n    }\n    dispose() {\n        this.eventEmitter.removeAllListeners();\n        iframe.dispose();\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n        if (this._popupManager) {\n            this._popupManager.close();\n        }\n        window.removeEventListener('message', this.boundHandleMessage);\n        window.removeEventListener('unload', this.boundDispose);\n        return Promise.resolve(undefined);\n    }\n    cancel(error) {\n        if (this._popupManager) {\n            this._popupManager.emit(events_2.POPUP.CLOSED, error);\n        }\n    }\n    handleMessage(messageEvent) {\n        if (messageEvent.origin !== iframe.origin)\n            return;\n        const message = (0, events_2.parseMessage)(messageEvent.data);\n        this._log.log('handleMessage', message);\n        switch (message.event) {\n            case events_2.RESPONSE_EVENT: {\n                const { id = 0, success, payload } = message;\n                const resolved = this._messagePromises.resolve(id, { id, success, payload });\n                if (!resolved)\n                    this._log.warn(`Unknown message id ${id}`);\n                break;\n            }\n            case events_2.DEVICE_EVENT:\n                this.eventEmitter.emit(message.event, message);\n                this.eventEmitter.emit(message.type, message.payload);\n                break;\n            case events_2.TRANSPORT_EVENT:\n                this.eventEmitter.emit(message.event, message);\n                this.eventEmitter.emit(message.type, message.payload);\n                break;\n            case events_2.BLOCKCHAIN_EVENT:\n                this.eventEmitter.emit(message.event, message);\n                this.eventEmitter.emit(message.type, message.payload);\n                break;\n            case events_2.UI_EVENT:\n                if (message.type === events_2.IFRAME.BOOTSTRAP) {\n                    iframe.clearTimeout();\n                    break;\n                }\n                if (message.type === events_2.IFRAME.LOADED) {\n                    iframe.initPromise.resolve();\n                }\n                if (message.type === events_2.IFRAME.ERROR) {\n                    iframe.initPromise.reject(message.payload.error);\n                }\n                this.eventEmitter.emit(message.event, message);\n                this.eventEmitter.emit(message.type, message.payload);\n                break;\n            default:\n                this._log.log('Undefined message', messageEvent.data);\n        }\n    }\n    async init(settings = {}) {\n        var _a, _b;\n        if (iframe.instance) {\n            throw ERRORS.TypedError('Init_AlreadyInitialized');\n        }\n        this._settings = (0, connectSettings_1.parseConnectSettings)(Object.assign(Object.assign({}, this._settings), settings));\n        if (!this._settings.manifest) {\n            throw ERRORS.TypedError('Init_ManifestMissing');\n        }\n        if (!((_a = this._settings.transports) === null || _a === void 0 ? void 0 : _a.length)) {\n            this._settings.transports = ['BridgeTransport', 'WebUsbTransport'];\n        }\n        if (this._settings.lazyLoad) {\n            this._settings.lazyLoad = false;\n            return;\n        }\n        if (!this._popupManager) {\n            this._popupManager = this.initPopupManager();\n        }\n        this._log.enabled = !!this._settings.debug;\n        window.addEventListener('message', this.boundHandleMessage);\n        window.addEventListener('unload', this.boundDispose);\n        await iframe.init(this._settings);\n        if (this._settings.coreMode === 'auto') {\n            const { promiseId, promise } = this._messagePromises.create();\n            this._log.debug('coreMode = auto, Checking bridge availability');\n            iframe.postMessage({ id: promiseId, type: events_2.TRANSPORT.GET_INFO });\n            const response = await promise;\n            this._log.debug('Bridge availability response', response);\n            if (response.payload === undefined &&\n                navigator.usb &&\n                ((_b = this._settings.transports) === null || _b === void 0 ? void 0 : _b.includes('WebUsbTransport'))) {\n                throw ERRORS.TypedError('Transport_Missing');\n            }\n        }\n        if (this._settings.sharedLogger !== false) {\n            iframe.initIframeLogger();\n        }\n    }\n    async call(params) {\n        if (!iframe.instance && !iframe.timeout) {\n            this._settings = (0, connectSettings_1.parseConnectSettings)(this._settings);\n            if (!this._settings.manifest) {\n                return (0, events_2.createErrorMessage)(ERRORS.TypedError('Init_ManifestMissing'));\n            }\n            if (!this._popupManager) {\n                this._popupManager = this.initPopupManager();\n            }\n            try {\n                await this.init(this._settings);\n            }\n            catch (error) {\n                if (this._popupManager) {\n                    this._popupManager.clear();\n                }\n                return (0, events_2.createErrorMessage)(error);\n            }\n        }\n        if (iframe.timeout) {\n            await iframe.initPromise.promise;\n        }\n        if (iframe.error) {\n            return (0, events_2.createErrorMessage)(iframe.error);\n        }\n        if (this._settings.popup && this._popupManager) {\n            this._popupManager.request();\n        }\n        try {\n            const { promiseId, promise } = this._messagePromises.create();\n            iframe.postMessage({ id: promiseId, type: events_2.IFRAME.CALL, payload: params });\n            const response = await promise;\n            if (response) {\n                if (!response.success &&\n                    response.payload.code !== 'Device_CallInProgress' &&\n                    this._popupManager) {\n                    this._popupManager.unlock();\n                }\n                return response;\n            }\n            if (this._popupManager) {\n                this._popupManager.unlock();\n            }\n            return (0, events_2.createErrorMessage)(ERRORS.TypedError('Method_NoResponse'));\n        }\n        catch (error) {\n            this._log.error('__call error', error);\n            if (this._popupManager) {\n                this._popupManager.clear(false);\n            }\n            return (0, events_2.createErrorMessage)(error);\n        }\n    }\n    uiResponse(response) {\n        if (!iframe.instance) {\n            throw ERRORS.TypedError('Init_NotInitialized');\n        }\n        iframe.postMessage(response);\n    }\n    renderWebUSBButton(className) {\n        (0, button_1.default)(className, this._settings.webusbSrc);\n    }\n    async requestLogin(params) {\n        if (typeof params.callback === 'function') {\n            const { callback } = params;\n            const loginChallengeListener = async (event) => {\n                const { data } = event;\n                if (data && data.type === events_2.UI.LOGIN_CHALLENGE_REQUEST) {\n                    try {\n                        const payload = await callback();\n                        iframe.postMessage({\n                            type: events_2.UI.LOGIN_CHALLENGE_RESPONSE,\n                            payload,\n                        });\n                    }\n                    catch (error) {\n                        iframe.postMessage({\n                            type: events_2.UI.LOGIN_CHALLENGE_RESPONSE,\n                            payload: error.message,\n                        });\n                    }\n                }\n            };\n            window.addEventListener('message', loginChallengeListener, false);\n            const response = await this.call(Object.assign(Object.assign({ method: 'requestLogin' }, params), { asyncChallenge: true, callback: null }));\n            window.removeEventListener('message', loginChallengeListener);\n            return response;\n        }\n        return this.call(Object.assign({ method: 'requestLogin' }, params));\n    }\n    disableWebUSB() {\n        if (!iframe.instance) {\n            throw ERRORS.TypedError('Init_NotInitialized');\n        }\n        iframe.postMessage({ type: events_2.TRANSPORT.DISABLE_WEBUSB });\n    }\n    async requestWebUSBDevice() {\n        try {\n            await window.navigator.usb.requestDevice({ filters: config_1.config.webusb });\n            iframe.postMessage({ type: events_2.TRANSPORT.REQUEST_DEVICE });\n        }\n        catch (_err) {\n        }\n    }\n}\nexports.CoreInIframe = CoreInIframe;\nconst impl = new CoreInIframe();\nexports.TrezorConnect = (0, factory_1.factory)({\n    eventEmitter: impl.eventEmitter,\n    init: impl.init.bind(impl),\n    call: impl.call.bind(impl),\n    manifest: impl.manifest.bind(impl),\n    requestLogin: impl.requestLogin.bind(impl),\n    uiResponse: impl.uiResponse.bind(impl),\n    renderWebUSBButton: impl.renderWebUSBButton.bind(impl),\n    disableWebUSB: impl.disableWebUSB.bind(impl),\n    requestWebUSBDevice: impl.requestWebUSBDevice.bind(impl),\n    cancel: impl.cancel.bind(impl),\n    dispose: impl.dispose.bind(impl),\n});\n//# sourceMappingURL=core-in-iframe.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TrezorConnectDynamicImpl = void 0;\nconst tslib_1 = require(\"tslib\");\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst core_in_iframe_1 = require(\"./impl/core-in-iframe\");\nconst core_in_popup_1 = require(\"./impl/core-in-popup\");\nconst proxy_event_emitter_1 = tslib_1.__importDefault(require(\"./utils/proxy-event-emitter\"));\nconst connectSettings_1 = require(\"./connectSettings\");\nconst IFRAME_ERRORS = ['Init_IframeBlocked', 'Init_IframeTimeout', 'Transport_Missing'];\nclass TrezorConnectDynamicImpl {\n  constructor() {\n    this.currentTarget = 'iframe';\n    this.coreInIframeImpl = new core_in_iframe_1.CoreInIframe();\n    this.coreInPopupImpl = new core_in_popup_1.CoreInPopup();\n    this.eventEmitter = new proxy_event_emitter_1.default([this.coreInIframeImpl.eventEmitter, this.coreInPopupImpl.eventEmitter]);\n  }\n  getTarget() {\n    return this.currentTarget === 'iframe' ? this.coreInIframeImpl : this.coreInPopupImpl;\n  }\n  async switchTarget(target) {\n    if (this.currentTarget === target) {\n      return;\n    }\n    await this.getTarget().dispose();\n    this.currentTarget = target;\n    await this.getTarget().init(this.lastSettings);\n  }\n  manifest(manifest) {\n    this.lastSettings = Object.assign(Object.assign({}, this.lastSettings), {\n      manifest\n    });\n    this.getTarget().manifest(manifest);\n  }\n  async init() {\n    let settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const env = (0, connectSettings_1.getEnv)();\n    if (settings.coreMode === 'iframe' || settings.popup === false || env === 'webextension') {\n      this.currentTarget = 'iframe';\n    } else if (settings.coreMode === 'popup') {\n      this.currentTarget = 'core-in-popup';\n    } else {\n      settings.coreMode = 'auto';\n      this.currentTarget = 'iframe';\n    }\n    this.lastSettings = settings;\n    try {\n      return await this.getTarget().init(settings);\n    } catch (error) {\n      if (await this.handleErrorFallback(error.code)) {\n        return await this.getTarget().init(settings);\n      }\n      throw error;\n    }\n  }\n  async call(params) {\n    const response = await this.getTarget().call(params);\n    if (!response.success) {\n      if (await this.handleErrorFallback(response.payload.code)) {\n        return await this.getTarget().call(params);\n      }\n    }\n    return response;\n  }\n  async handleErrorFallback(errorCode) {\n    var _a, _b;\n    if (((_a = this.lastSettings) === null || _a === void 0 ? void 0 : _a.coreMode) === 'auto' && IFRAME_ERRORS.includes(errorCode)) {\n      const webUsbUnavailableInBrowser = !navigator.usb;\n      const webUsbDisabledInSettings = ((_b = this.lastSettings.transports) === null || _b === void 0 ? void 0 : _b.includes('WebUsbTransport')) === false || this.lastSettings.webusb === false;\n      if (errorCode === 'Transport_Missing' && (webUsbUnavailableInBrowser || webUsbDisabledInSettings)) {\n        return false;\n      }\n      await this.switchTarget('core-in-popup');\n      return true;\n    }\n    return false;\n  }\n  requestLogin(params) {\n    return this.getTarget().requestLogin(params);\n  }\n  uiResponse(params) {\n    return this.getTarget().uiResponse(params);\n  }\n  renderWebUSBButton() {\n    return this.getTarget().renderWebUSBButton();\n  }\n  disableWebUSB() {\n    return this.getTarget().disableWebUSB();\n  }\n  requestWebUSBDevice() {\n    return this.getTarget().requestWebUSBDevice();\n  }\n  cancel(error) {\n    return this.getTarget().cancel(error);\n  }\n  dispose() {\n    this.eventEmitter.removeAllListeners();\n    return this.getTarget().dispose();\n  }\n}\nexports.TrezorConnectDynamicImpl = TrezorConnectDynamicImpl;\nconst impl = new TrezorConnectDynamicImpl();\nconst TrezorConnect = (0, factory_1.factory)({\n  eventEmitter: impl.eventEmitter,\n  init: impl.init.bind(impl),\n  call: impl.call.bind(impl),\n  manifest: impl.manifest.bind(impl),\n  requestLogin: impl.requestLogin.bind(impl),\n  uiResponse: impl.uiResponse.bind(impl),\n  renderWebUSBButton: impl.renderWebUSBButton.bind(impl),\n  disableWebUSB: impl.disableWebUSB.bind(impl),\n  requestWebUSBDevice: impl.requestWebUSBDevice.bind(impl),\n  cancel: impl.cancel.bind(impl),\n  dispose: impl.dispose.bind(impl)\n});\nexports.default = TrezorConnect;\ntslib_1.__exportStar(require(\"@trezor/connect/lib/exports\"), exports);","map":{"version":3,"names":["Object","defineProperty","exports","value","TrezorConnectDynamicImpl","tslib_1","require","factory_1","core_in_iframe_1","core_in_popup_1","proxy_event_emitter_1","__importDefault","connectSettings_1","IFRAME_ERRORS","constructor","currentTarget","coreInIframeImpl","CoreInIframe","coreInPopupImpl","CoreInPopup","eventEmitter","default","getTarget","switchTarget","target","dispose","init","lastSettings","manifest","assign","settings","arguments","length","undefined","env","getEnv","coreMode","popup","error","handleErrorFallback","code","call","params","response","success","payload","errorCode","_a","_b","includes","webUsbUnavailableInBrowser","navigator","usb","webUsbDisabledInSettings","transports","webusb","requestLogin","uiResponse","renderWebUSBButton","disableWebUSB","requestWebUSBDevice","cancel","removeAllListeners","impl","TrezorConnect","factory","bind","__exportStar"],"sources":["C:/Users/Administrator/solana-wallet-app/node_modules/@trezor/connect-web/lib/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrezorConnectDynamicImpl = void 0;\nconst tslib_1 = require(\"tslib\");\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst core_in_iframe_1 = require(\"./impl/core-in-iframe\");\nconst core_in_popup_1 = require(\"./impl/core-in-popup\");\nconst proxy_event_emitter_1 = tslib_1.__importDefault(require(\"./utils/proxy-event-emitter\"));\nconst connectSettings_1 = require(\"./connectSettings\");\nconst IFRAME_ERRORS = ['Init_IframeBlocked', 'Init_IframeTimeout', 'Transport_Missing'];\nclass TrezorConnectDynamicImpl {\n    constructor() {\n        this.currentTarget = 'iframe';\n        this.coreInIframeImpl = new core_in_iframe_1.CoreInIframe();\n        this.coreInPopupImpl = new core_in_popup_1.CoreInPopup();\n        this.eventEmitter = new proxy_event_emitter_1.default([\n            this.coreInIframeImpl.eventEmitter,\n            this.coreInPopupImpl.eventEmitter,\n        ]);\n    }\n    getTarget() {\n        return this.currentTarget === 'iframe' ? this.coreInIframeImpl : this.coreInPopupImpl;\n    }\n    async switchTarget(target) {\n        if (this.currentTarget === target) {\n            return;\n        }\n        await this.getTarget().dispose();\n        this.currentTarget = target;\n        await this.getTarget().init(this.lastSettings);\n    }\n    manifest(manifest) {\n        this.lastSettings = Object.assign(Object.assign({}, this.lastSettings), { manifest });\n        this.getTarget().manifest(manifest);\n    }\n    async init(settings = {}) {\n        const env = (0, connectSettings_1.getEnv)();\n        if (settings.coreMode === 'iframe' || settings.popup === false || env === 'webextension') {\n            this.currentTarget = 'iframe';\n        }\n        else if (settings.coreMode === 'popup') {\n            this.currentTarget = 'core-in-popup';\n        }\n        else {\n            settings.coreMode = 'auto';\n            this.currentTarget = 'iframe';\n        }\n        this.lastSettings = settings;\n        try {\n            return await this.getTarget().init(settings);\n        }\n        catch (error) {\n            if (await this.handleErrorFallback(error.code)) {\n                return await this.getTarget().init(settings);\n            }\n            throw error;\n        }\n    }\n    async call(params) {\n        const response = await this.getTarget().call(params);\n        if (!response.success) {\n            if (await this.handleErrorFallback(response.payload.code)) {\n                return await this.getTarget().call(params);\n            }\n        }\n        return response;\n    }\n    async handleErrorFallback(errorCode) {\n        var _a, _b;\n        if (((_a = this.lastSettings) === null || _a === void 0 ? void 0 : _a.coreMode) === 'auto' && IFRAME_ERRORS.includes(errorCode)) {\n            const webUsbUnavailableInBrowser = !navigator.usb;\n            const webUsbDisabledInSettings = ((_b = this.lastSettings.transports) === null || _b === void 0 ? void 0 : _b.includes('WebUsbTransport')) === false ||\n                this.lastSettings.webusb === false;\n            if (errorCode === 'Transport_Missing' &&\n                (webUsbUnavailableInBrowser || webUsbDisabledInSettings)) {\n                return false;\n            }\n            await this.switchTarget('core-in-popup');\n            return true;\n        }\n        return false;\n    }\n    requestLogin(params) {\n        return this.getTarget().requestLogin(params);\n    }\n    uiResponse(params) {\n        return this.getTarget().uiResponse(params);\n    }\n    renderWebUSBButton() {\n        return this.getTarget().renderWebUSBButton();\n    }\n    disableWebUSB() {\n        return this.getTarget().disableWebUSB();\n    }\n    requestWebUSBDevice() {\n        return this.getTarget().requestWebUSBDevice();\n    }\n    cancel(error) {\n        return this.getTarget().cancel(error);\n    }\n    dispose() {\n        this.eventEmitter.removeAllListeners();\n        return this.getTarget().dispose();\n    }\n}\nexports.TrezorConnectDynamicImpl = TrezorConnectDynamicImpl;\nconst impl = new TrezorConnectDynamicImpl();\nconst TrezorConnect = (0, factory_1.factory)({\n    eventEmitter: impl.eventEmitter,\n    init: impl.init.bind(impl),\n    call: impl.call.bind(impl),\n    manifest: impl.manifest.bind(impl),\n    requestLogin: impl.requestLogin.bind(impl),\n    uiResponse: impl.uiResponse.bind(impl),\n    renderWebUSBButton: impl.renderWebUSBButton.bind(impl),\n    disableWebUSB: impl.disableWebUSB.bind(impl),\n    requestWebUSBDevice: impl.requestWebUSBDevice.bind(impl),\n    cancel: impl.cancel.bind(impl),\n    dispose: impl.dispose.bind(impl),\n});\nexports.default = TrezorConnect;\ntslib_1.__exportStar(require(\"@trezor/connect/lib/exports\"), exports);\n//# sourceMappingURL=index.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,wBAAwB,GAAG,KAAK,CAAC;AACzC,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAO,CAAC;AAChC,MAAMC,SAAS,GAAGD,OAAO,CAAC,6BAA6B,CAAC;AACxD,MAAME,gBAAgB,GAAGF,OAAO,CAAC,uBAAuB,CAAC;AACzD,MAAMG,eAAe,GAAGH,OAAO,CAAC,sBAAsB,CAAC;AACvD,MAAMI,qBAAqB,GAAGL,OAAO,CAACM,eAAe,CAACL,OAAO,CAAC,6BAA6B,CAAC,CAAC;AAC7F,MAAMM,iBAAiB,GAAGN,OAAO,CAAC,mBAAmB,CAAC;AACtD,MAAMO,aAAa,GAAG,CAAC,oBAAoB,EAAE,oBAAoB,EAAE,mBAAmB,CAAC;AACvF,MAAMT,wBAAwB,CAAC;EAC3BU,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,aAAa,GAAG,QAAQ;IAC7B,IAAI,CAACC,gBAAgB,GAAG,IAAIR,gBAAgB,CAACS,YAAY,CAAC,CAAC;IAC3D,IAAI,CAACC,eAAe,GAAG,IAAIT,eAAe,CAACU,WAAW,CAAC,CAAC;IACxD,IAAI,CAACC,YAAY,GAAG,IAAIV,qBAAqB,CAACW,OAAO,CAAC,CAClD,IAAI,CAACL,gBAAgB,CAACI,YAAY,EAClC,IAAI,CAACF,eAAe,CAACE,YAAY,CACpC,CAAC;EACN;EACAE,SAASA,CAAA,EAAG;IACR,OAAO,IAAI,CAACP,aAAa,KAAK,QAAQ,GAAG,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACE,eAAe;EACzF;EACA,MAAMK,YAAYA,CAACC,MAAM,EAAE;IACvB,IAAI,IAAI,CAACT,aAAa,KAAKS,MAAM,EAAE;MAC/B;IACJ;IACA,MAAM,IAAI,CAACF,SAAS,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC;IAChC,IAAI,CAACV,aAAa,GAAGS,MAAM;IAC3B,MAAM,IAAI,CAACF,SAAS,CAAC,CAAC,CAACI,IAAI,CAAC,IAAI,CAACC,YAAY,CAAC;EAClD;EACAC,QAAQA,CAACA,QAAQ,EAAE;IACf,IAAI,CAACD,YAAY,GAAG3B,MAAM,CAAC6B,MAAM,CAAC7B,MAAM,CAAC6B,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACF,YAAY,CAAC,EAAE;MAAEC;IAAS,CAAC,CAAC;IACrF,IAAI,CAACN,SAAS,CAAC,CAAC,CAACM,QAAQ,CAACA,QAAQ,CAAC;EACvC;EACA,MAAMF,IAAIA,CAAA,EAAgB;IAAA,IAAfI,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACpB,MAAMG,GAAG,GAAG,CAAC,CAAC,EAAEtB,iBAAiB,CAACuB,MAAM,EAAE,CAAC;IAC3C,IAAIL,QAAQ,CAACM,QAAQ,KAAK,QAAQ,IAAIN,QAAQ,CAACO,KAAK,KAAK,KAAK,IAAIH,GAAG,KAAK,cAAc,EAAE;MACtF,IAAI,CAACnB,aAAa,GAAG,QAAQ;IACjC,CAAC,MACI,IAAIe,QAAQ,CAACM,QAAQ,KAAK,OAAO,EAAE;MACpC,IAAI,CAACrB,aAAa,GAAG,eAAe;IACxC,CAAC,MACI;MACDe,QAAQ,CAACM,QAAQ,GAAG,MAAM;MAC1B,IAAI,CAACrB,aAAa,GAAG,QAAQ;IACjC;IACA,IAAI,CAACY,YAAY,GAAGG,QAAQ;IAC5B,IAAI;MACA,OAAO,MAAM,IAAI,CAACR,SAAS,CAAC,CAAC,CAACI,IAAI,CAACI,QAAQ,CAAC;IAChD,CAAC,CACD,OAAOQ,KAAK,EAAE;MACV,IAAI,MAAM,IAAI,CAACC,mBAAmB,CAACD,KAAK,CAACE,IAAI,CAAC,EAAE;QAC5C,OAAO,MAAM,IAAI,CAAClB,SAAS,CAAC,CAAC,CAACI,IAAI,CAACI,QAAQ,CAAC;MAChD;MACA,MAAMQ,KAAK;IACf;EACJ;EACA,MAAMG,IAAIA,CAACC,MAAM,EAAE;IACf,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACrB,SAAS,CAAC,CAAC,CAACmB,IAAI,CAACC,MAAM,CAAC;IACpD,IAAI,CAACC,QAAQ,CAACC,OAAO,EAAE;MACnB,IAAI,MAAM,IAAI,CAACL,mBAAmB,CAACI,QAAQ,CAACE,OAAO,CAACL,IAAI,CAAC,EAAE;QACvD,OAAO,MAAM,IAAI,CAAClB,SAAS,CAAC,CAAC,CAACmB,IAAI,CAACC,MAAM,CAAC;MAC9C;IACJ;IACA,OAAOC,QAAQ;EACnB;EACA,MAAMJ,mBAAmBA,CAACO,SAAS,EAAE;IACjC,IAAIC,EAAE,EAAEC,EAAE;IACV,IAAI,CAAC,CAACD,EAAE,GAAG,IAAI,CAACpB,YAAY,MAAM,IAAI,IAAIoB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACX,QAAQ,MAAM,MAAM,IAAIvB,aAAa,CAACoC,QAAQ,CAACH,SAAS,CAAC,EAAE;MAC7H,MAAMI,0BAA0B,GAAG,CAACC,SAAS,CAACC,GAAG;MACjD,MAAMC,wBAAwB,GAAG,CAAC,CAACL,EAAE,GAAG,IAAI,CAACrB,YAAY,CAAC2B,UAAU,MAAM,IAAI,IAAIN,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,QAAQ,CAAC,iBAAiB,CAAC,MAAM,KAAK,IAChJ,IAAI,CAACtB,YAAY,CAAC4B,MAAM,KAAK,KAAK;MACtC,IAAIT,SAAS,KAAK,mBAAmB,KAChCI,0BAA0B,IAAIG,wBAAwB,CAAC,EAAE;QAC1D,OAAO,KAAK;MAChB;MACA,MAAM,IAAI,CAAC9B,YAAY,CAAC,eAAe,CAAC;MACxC,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;EACAiC,YAAYA,CAACd,MAAM,EAAE;IACjB,OAAO,IAAI,CAACpB,SAAS,CAAC,CAAC,CAACkC,YAAY,CAACd,MAAM,CAAC;EAChD;EACAe,UAAUA,CAACf,MAAM,EAAE;IACf,OAAO,IAAI,CAACpB,SAAS,CAAC,CAAC,CAACmC,UAAU,CAACf,MAAM,CAAC;EAC9C;EACAgB,kBAAkBA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACpC,SAAS,CAAC,CAAC,CAACoC,kBAAkB,CAAC,CAAC;EAChD;EACAC,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACrC,SAAS,CAAC,CAAC,CAACqC,aAAa,CAAC,CAAC;EAC3C;EACAC,mBAAmBA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACtC,SAAS,CAAC,CAAC,CAACsC,mBAAmB,CAAC,CAAC;EACjD;EACAC,MAAMA,CAACvB,KAAK,EAAE;IACV,OAAO,IAAI,CAAChB,SAAS,CAAC,CAAC,CAACuC,MAAM,CAACvB,KAAK,CAAC;EACzC;EACAb,OAAOA,CAAA,EAAG;IACN,IAAI,CAACL,YAAY,CAAC0C,kBAAkB,CAAC,CAAC;IACtC,OAAO,IAAI,CAACxC,SAAS,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC;EACrC;AACJ;AACAvB,OAAO,CAACE,wBAAwB,GAAGA,wBAAwB;AAC3D,MAAM2D,IAAI,GAAG,IAAI3D,wBAAwB,CAAC,CAAC;AAC3C,MAAM4D,aAAa,GAAG,CAAC,CAAC,EAAEzD,SAAS,CAAC0D,OAAO,EAAE;EACzC7C,YAAY,EAAE2C,IAAI,CAAC3C,YAAY;EAC/BM,IAAI,EAAEqC,IAAI,CAACrC,IAAI,CAACwC,IAAI,CAACH,IAAI,CAAC;EAC1BtB,IAAI,EAAEsB,IAAI,CAACtB,IAAI,CAACyB,IAAI,CAACH,IAAI,CAAC;EAC1BnC,QAAQ,EAAEmC,IAAI,CAACnC,QAAQ,CAACsC,IAAI,CAACH,IAAI,CAAC;EAClCP,YAAY,EAAEO,IAAI,CAACP,YAAY,CAACU,IAAI,CAACH,IAAI,CAAC;EAC1CN,UAAU,EAAEM,IAAI,CAACN,UAAU,CAACS,IAAI,CAACH,IAAI,CAAC;EACtCL,kBAAkB,EAAEK,IAAI,CAACL,kBAAkB,CAACQ,IAAI,CAACH,IAAI,CAAC;EACtDJ,aAAa,EAAEI,IAAI,CAACJ,aAAa,CAACO,IAAI,CAACH,IAAI,CAAC;EAC5CH,mBAAmB,EAAEG,IAAI,CAACH,mBAAmB,CAACM,IAAI,CAACH,IAAI,CAAC;EACxDF,MAAM,EAAEE,IAAI,CAACF,MAAM,CAACK,IAAI,CAACH,IAAI,CAAC;EAC9BtC,OAAO,EAAEsC,IAAI,CAACtC,OAAO,CAACyC,IAAI,CAACH,IAAI;AACnC,CAAC,CAAC;AACF7D,OAAO,CAACmB,OAAO,GAAG2C,aAAa;AAC/B3D,OAAO,CAAC8D,YAAY,CAAC7D,OAAO,CAAC,6BAA6B,CAAC,EAAEJ,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}